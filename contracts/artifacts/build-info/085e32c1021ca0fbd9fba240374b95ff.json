{
	"id": "085e32c1021ca0fbd9fba240374b95ff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HotswapLiquidity.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\npragma solidity ^0.8.25;\r\n\r\nimport \"./Ownable.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\nimport \"./interfaces/ERC20.sol\";\r\nimport \"./interfaces/ERC721.sol\";\r\nimport \"./HotswapBase.sol\";\r\n\r\ncontract HotswapLiquidity is HotswapBase {\r\n    using SafeMath for uint256;\r\n\r\n    constructor(address nft, address fft) {\r\n        NFT = nft;\r\n        FFT = fft;\r\n\r\n        _fft = ERC20(fft);\r\n        _nft = ERC721Enumerable(nft);\r\n    }\r\n\r\n    address public NFT;\r\n    address public FFT;\r\n    address public Controller;\r\n\r\n    ERC20 _fft;\r\n    ERC721Enumerable _nft;\r\n\r\n    modifier onlyAuthorized() {\r\n        require(msg.sender == _owner || msg.sender == Controller);\r\n        _;\r\n    }\r\n\r\n    function withdrawFFT(uint256 amount, address dest) external onlyAuthorized {\r\n        require(_fft.transfer(dest, amount), \"Withdrawal failed\");\r\n    }\r\n\r\n    function withdrawNFT(uint256 amount, address dest) external onlyAuthorized {\r\n        uint256 tokenId;\r\n        bytes memory data = new bytes(0);\r\n\r\n        for (uint256 i = 0; i < amount; i++) {\r\n            tokenId = _nft.tokenOfOwnerByIndex(address(this), i);\r\n            _nft.safeTransferFrom(address(this), dest, tokenId, data);\r\n        }\r\n    }\r\n\r\n    function setController(address addr) external onlyOwner {\r\n        Controller = addr;\r\n    }\r\n}\r\n"
			},
			"contracts/HotswapBase.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\npragma solidity ^0.8.25;\r\n\r\nimport \"./Ownable.sol\";\r\n\r\ncontract HotswapBase is Ownable {\r\n    function _transferNative(\r\n        address payable to,\r\n        uint256 amount\r\n    ) internal returns (bool) {\r\n        if (to.send(amount)) {\r\n            emit NativeTransferred(amount, to);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    event NativeTransferred(uint256 amount, address targetAddr);\r\n}\r\n"
			},
			"contracts/interfaces/ERC721.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title ERC721 interface implementation\r\n// Sources\r\n// https://eips.ethereum.org/EIPS/eip-721\r\npragma solidity ^0.8.25;\r\n\r\n/// @title ERC-721 Non-Fungible Token Standard\r\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\r\n///  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\r\ninterface ERC721 {\r\n    /// @notice Count all NFTs assigned to an owner\r\n    /// @dev NFTs assigned to the zero address are considered invalid, and this\r\n    ///  function throws for queries about the zero address.\r\n    /// @param _owner An address for whom to query the balance\r\n    /// @return The number of NFTs owned by `_owner`, possibly zero\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n\r\n    /// @notice Find the owner of an NFT\r\n    /// @dev NFTs assigned to zero address are considered invalid, and queries\r\n    ///  about them do throw.\r\n    /// @param _tokenId The identifier for an NFT\r\n    /// @return The address of the owner of the NFT\r\n    function ownerOf(uint256 _tokenId) external view returns (address);\r\n\r\n    /// @notice Transfers the ownership of an NFT from one address to another address\r\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\r\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\r\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\r\n    ///  `_tokenId` is not a valid NFT. When transfer is complete, this function\r\n    ///  checks if `_to` is a smart contract (code size > 0). If so, it calls\r\n    ///  `onERC721Received` on `_to` and throws if the return value is not\r\n    ///  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    /// @param data Additional data with no specified format, sent in call to `_to`\r\n    function safeTransferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _tokenId,\r\n        bytes memory data\r\n    ) external payable;\r\n\r\n    /// @notice Transfers the ownership of an NFT from one address to another address\r\n    /// @dev This works identically to the other function with an extra data parameter,\r\n    ///  except this function just sets data to \"\".\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    function safeTransferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _tokenId\r\n    ) external payable;\r\n\r\n    /// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\r\n    ///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\r\n    ///  THEY MAY BE PERMANENTLY LOST\r\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\r\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\r\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\r\n    ///  `_tokenId` is not a valid NFT.\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _tokenId\r\n    ) external payable;\r\n}\r\n\r\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\r\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\r\ninterface ERC721Enumerable is ERC721 {\r\n    /// @notice Count NFTs tracked by this contract\r\n    /// @return A count of valid NFTs tracked by this contract, where each one of\r\n    ///  them has an assigned and queryable owner not equal to the zero address\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /// @notice Enumerate valid NFTs\r\n    /// @dev Throws if `_index` >= `totalSupply()`.\r\n    /// @param _index A counter less than `totalSupply()`\r\n    /// @return The token identifier for the `_index`th NFT,\r\n    ///  (sort order not specified)\r\n    function tokenByIndex(uint256 _index) external view returns (uint256);\r\n\r\n    /// @notice Enumerate NFTs assigned to an owner\r\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\r\n    ///  `_owner` is the zero address, representing invalid NFTs.\r\n    /// @param _owner An address where we are interested in NFTs owned by them\r\n    /// @param _index A counter less than `balanceOf(_owner)`\r\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\r\n    ///   (sort order not specified)\r\n    function tokenOfOwnerByIndex(\r\n        address _owner,\r\n        uint256 _index\r\n    ) external view returns (uint256);\r\n}\r\n"
			},
			"contracts/interfaces/ERC20.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title ERC20 interface implementation\r\n// Sources\r\n// https://ethereum.org/en/developers/docs/standards/tokens/erc-20/\r\npragma solidity ^0.8.25;\r\n\r\ninterface ERC20 {\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n\r\n    function transfer(\r\n        address _to,\r\n        uint256 _value\r\n    ) external returns (bool success);\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) external returns (bool success);\r\n\r\n    function approve(\r\n        address _spender,\r\n        uint256 _value\r\n    ) external returns (bool success);\r\n\r\n    function allowance(\r\n        address _owner,\r\n        address _spender\r\n    ) external view returns (uint256 remaining);\r\n}\r\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\npragma solidity ^0.8.25;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(\r\n        uint256 a,\r\n        uint256 b\r\n    ) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\npragma solidity ^0.8.25;\r\n\r\ninterface IOwnable {\r\n    function transferOwnership(address newOwner) external;\r\n}\r\n\r\ncontract Ownable is IOwnable {\r\n    address internal _owner;\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipRenounced(_owner);\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/HotswapBase.sol": {
				"HotswapBase": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "targetAddr",
									"type": "address"
								}
							],
							"name": "NativeTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HotswapBase.sol\":88:459  contract HotswapBase is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":431:441  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":422:428  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":422:441  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotswapBase.sol\":88:459  contract HotswapBase is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HotswapBase.sol\":88:459  contract HotswapBase is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      tag_22\n        /* \"contracts/Ownable.sol\":584:591  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Ownable.sol\":576:594  require(isOwner()) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":803:809  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":784:810  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":838:839  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":821:827  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":821:840  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Ownable.sol\":495:502  address */\n      0x00\n        /* \"contracts/Ownable.sol\":522:528  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":515:528  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Ownable.sol\":662:666  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":700:706  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":686:706  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":686:696  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":686:706  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":679:706  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      tag_28\n        /* \"contracts/Ownable.sol\":584:591  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Ownable.sol\":576:594  require(isOwner()) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Ownable.sol\":929:957  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/Ownable.sol\":948:956  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":929:947  _transferOwnership */\n      tag_32\n        /* \"contracts/Ownable.sol\":929:957  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":973:1160  function _transferOwnership(address newOwner) internal {... */\n    tag_32:\n        /* \"contracts/Ownable.sol\":1067:1068  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1047:1069  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1047:1055  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1047:1069  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":1039:1070  require(newOwner != address(0)) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/Ownable.sol\":1115:1123  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1086:1124  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1107:1113  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1086:1124  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1144:1152  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1135:1141  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":1135:1152  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":973:1160  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_38:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_39:\n        /* \"#utility.yul\":770:791   */\n      tag_55\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_16:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_57\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_41:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_43:\n        /* \"#utility.yul\":1420:1444   */\n      tag_62\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      dup1\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_63:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_44:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_65\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_19:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_68\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1696:1815   */\n    tag_67:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_69\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220489a19cb8a60aff5d27a833ad0ded60ca48cfa06f21978e1cccd1e76764654ed64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104078061005b5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea2646970667358221220489a19cb8a60aff5d27a833ad0ded60ca48cfa06f21978e1cccd1e76764654ed64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x407 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP11 NOT 0xCB DUP11 PUSH1 0xAF CREATE2 0xD2 PUSH27 0x833AD0DED60CA48CFA06F21978E1CCCD1E76764654ED64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "88:371:0:-:0;;;;;;;;;;;;;431:10:2;422:6;;:19;;;;;;;;;;;;;;;;;;88:371:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_303": {
									"entryPoint": 507,
									"id": 303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_250": {
									"entryPoint": 394,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_230": {
									"entryPoint": 355,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_267": {
									"entryPoint": 176,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_279": {
									"entryPoint": 479,
									"id": 279,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1952:6",
										"nodeType": "YulBlock",
										"src": "0:1952:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "463:124:6",
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nativeSrc": "473:26:6",
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:6",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:18:6",
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:6",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nativeSrc": "562:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nativeSrc": "509:71:6",
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nativeSrc": "509:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:6",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:6",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:6",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nativeSrc": "635:48:6",
													"nodeType": "YulBlock",
													"src": "635:48:6",
													"statements": [
														{
															"nativeSrc": "645:32:6",
															"nodeType": "YulAssignment",
															"src": "645:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:6"
																		},
																		"nativeSrc": "663:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:6"
																},
																"nativeSrc": "656:21:6",
																"nodeType": "YulFunctionCall",
																"src": "656:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:6",
														"nodeType": "YulTypedName",
														"src": "617:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:6",
														"nodeType": "YulTypedName",
														"src": "627:7:6",
														"type": ""
													}
												],
												"src": "593:90:6"
											},
											{
												"body": {
													"nativeSrc": "748:50:6",
													"nodeType": "YulBlock",
													"src": "748:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:6"
																		},
																		"nativeSrc": "770:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:6"
																},
																"nativeSrc": "758:34:6",
																"nodeType": "YulFunctionCall",
																"src": "758:34:6"
															},
															"nativeSrc": "758:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:6",
														"nodeType": "YulTypedName",
														"src": "736:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:6",
														"nodeType": "YulTypedName",
														"src": "743:3:6",
														"type": ""
													}
												],
												"src": "689:109:6"
											},
											{
												"body": {
													"nativeSrc": "896:118:6",
													"nodeType": "YulBlock",
													"src": "896:118:6",
													"statements": [
														{
															"nativeSrc": "906:26:6",
															"nodeType": "YulAssignment",
															"src": "906:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:6",
																		"nodeType": "YulLiteral",
																		"src": "929:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:6"
																},
																"nativeSrc": "914:18:6",
																"nodeType": "YulFunctionCall",
																"src": "914:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:6"
																		},
																		"nativeSrc": "989:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:6"
																},
																"nativeSrc": "942:65:6",
																"nodeType": "YulFunctionCall",
																"src": "942:65:6"
															},
															"nativeSrc": "942:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:6",
														"nodeType": "YulTypedName",
														"src": "868:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:6",
														"nodeType": "YulTypedName",
														"src": "880:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:6",
														"nodeType": "YulTypedName",
														"src": "891:4:6",
														"type": ""
													}
												],
												"src": "804:210:6"
											},
											{
												"body": {
													"nativeSrc": "1060:35:6",
													"nodeType": "YulBlock",
													"src": "1060:35:6",
													"statements": [
														{
															"nativeSrc": "1070:19:6",
															"nodeType": "YulAssignment",
															"src": "1070:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:6"
																},
																"nativeSrc": "1080:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:6",
														"nodeType": "YulTypedName",
														"src": "1053:6:6",
														"type": ""
													}
												],
												"src": "1020:75:6"
											},
											{
												"body": {
													"nativeSrc": "1190:28:6",
													"nodeType": "YulBlock",
													"src": "1190:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:6"
																},
																"nativeSrc": "1200:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:6"
															},
															"nativeSrc": "1200:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:6"
											},
											{
												"body": {
													"nativeSrc": "1313:28:6",
													"nodeType": "YulBlock",
													"src": "1313:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:6"
																},
																"nativeSrc": "1323:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:6"
															},
															"nativeSrc": "1323:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:6"
											},
											{
												"body": {
													"nativeSrc": "1390:79:6",
													"nodeType": "YulBlock",
													"src": "1390:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:6",
																"nodeType": "YulBlock",
																"src": "1447:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:6"
																			},
																			"nativeSrc": "1449:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:6"
																		},
																		"nativeSrc": "1449:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:6"
																				},
																				"nativeSrc": "1420:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:6"
																		},
																		"nativeSrc": "1410:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:6"
																},
																"nativeSrc": "1403:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:6"
															},
															"nativeSrc": "1400:63:6",
															"nodeType": "YulIf",
															"src": "1400:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:6",
														"nodeType": "YulTypedName",
														"src": "1383:5:6",
														"type": ""
													}
												],
												"src": "1347:122:6"
											},
											{
												"body": {
													"nativeSrc": "1527:87:6",
													"nodeType": "YulBlock",
													"src": "1527:87:6",
													"statements": [
														{
															"nativeSrc": "1537:29:6",
															"nodeType": "YulAssignment",
															"src": "1537:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:6"
																},
																"nativeSrc": "1546:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:6"
																},
																"nativeSrc": "1575:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:6"
															},
															"nativeSrc": "1575:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:6",
														"nodeType": "YulTypedName",
														"src": "1505:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:6",
														"nodeType": "YulTypedName",
														"src": "1513:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:6",
														"nodeType": "YulTypedName",
														"src": "1521:5:6",
														"type": ""
													}
												],
												"src": "1475:139:6"
											},
											{
												"body": {
													"nativeSrc": "1686:263:6",
													"nodeType": "YulBlock",
													"src": "1686:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:6",
																"nodeType": "YulBlock",
																"src": "1732:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:6"
																			},
																			"nativeSrc": "1734:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:6"
																		},
																		"nativeSrc": "1734:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:6"
																		},
																		"nativeSrc": "1703:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:6"
																},
																"nativeSrc": "1699:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:6"
															},
															"nativeSrc": "1696:119:6",
															"nodeType": "YulIf",
															"src": "1696:119:6"
														},
														{
															"nativeSrc": "1825:117:6",
															"nodeType": "YulBlock",
															"src": "1825:117:6",
															"statements": [
																{
																	"nativeSrc": "1840:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:6"
																				},
																				"nativeSrc": "1900:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:6"
																		},
																		"nativeSrc": "1879:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:6",
														"nodeType": "YulTypedName",
														"src": "1656:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:6",
														"nodeType": "YulTypedName",
														"src": "1667:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:6",
														"nodeType": "YulTypedName",
														"src": "1679:6:6",
														"type": ""
													}
												],
												"src": "1620:329:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea2646970667358221220489a19cb8a60aff5d27a833ad0ded60ca48cfa06f21978e1cccd1e76764654ed64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP11 NOT 0xCB DUP11 PUSH1 0xAF CREATE2 0xD2 PUSH27 0x833AD0DED60CA48CFA06F21978E1CCCD1E76764654ED64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "88:371:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:126:2;;;:::i;:::-;;457:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;722:126;584:9;:7;:9::i;:::-;576:18;;;;;;803:6:::1;::::0;::::1;;;;;;;;784:26;;;;;;;;;;;;838:1;821:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;722:126::o:0;457:79::-;495:7;522:6;;;;;;;;;;;515:13;;457:79;:::o;622:92::-;662:4;700:6;;;;;;;;;;;686:20;;:10;:20;;;679:27;;622:92;:::o;856:109::-;584:9;:7;:9::i;:::-;576:18;;;;;;929:28:::1;948:8;929:18;:28::i;:::-;856:109:::0;:::o;973:187::-;1067:1;1047:22;;:8;:22;;;1039:31;;;;;;1115:8;1086:38;;1107:6;;;;;;;;;;1086:38;;;;;;;;;;;;1144:8;1135:6;;:17;;;;;;;;;;;;;;;;;;973:187;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206200",
								"executionCost": "24514",
								"totalCost": "230714"
							},
							"external": {
								"isOwner()": "2512",
								"owner()": "2515",
								"renounceOwnership()": "29882",
								"transferOwnership(address)": "30702"
							},
							"internal": {
								"_transferNative(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 431,
									"end": 441,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 422,
									"end": 428,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 428,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 88,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 459,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220489a19cb8a60aff5d27a833ad0ded60ca48cfa06f21978e1cccd1e76764654ed64736f6c63430008190033",
									".code": [
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 722,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 584,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 515,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 662,
											"end": 666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 679,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 679,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 584,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 948,
											"end": 956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 929,
											"end": 947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 929,
											"end": 957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/HotswapBase.sol",
								"contracts/HotswapLiquidity.sol",
								"contracts/Ownable.sol",
								"contracts/interfaces/ERC20.sol",
								"contracts/interfaces/ERC721.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddr\",\"type\":\"address\"}],\"name\":\"NativeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HotswapBase.sol\":\"HotswapBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HotswapBase.sol\":{\"keccak256\":\"0xb1866c84555b6478150519b392424a2e3894928271a1b3a646f43ec16dea457b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc050056d240a7b206570b4a46d566b2fda43b806b9dcfd88dc201b2e28f7309\",\"dweb:/ipfs/QmURa775XgAbvhHYhm74BTtUiLtFhUiVRBSsWcoUTTCzet\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xe4bdf9813088baf13e1dc03d01cc80ee75ce663b510eb9a3f3967ef86b91465a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a346ee898e1223e7e4ade4c86c042c2e72f6d86c8cf012a849e99c12a0a6c0b\",\"dweb:/ipfs/QmRro6cqdDLWmwrsgZt1QrsCYayQ5XTHpzaQfxvhiRt49v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 203,
								"contract": "contracts/HotswapBase.sol:HotswapBase",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/HotswapLiquidity.sol": {
				"HotswapLiquidity": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "fft",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "targetAddr",
									"type": "address"
								}
							],
							"name": "NativeTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Controller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FFT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "dest",
									"type": "address"
								}
							],
							"name": "withdrawFFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "dest",
									"type": "address"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HotswapLiquidity.sol\":222:1335  contract HotswapLiquidity is HotswapBase {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/HotswapLiquidity.sol\":305:460  constructor(address nft, address fft) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Ownable.sol\":431:441  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":422:428  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":422:441  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotswapLiquidity.sol\":360:363  nft */\n  dup2\n    /* \"contracts/HotswapLiquidity.sol\":354:357  NFT */\n  0x01\n  0x00\n    /* \"contracts/HotswapLiquidity.sol\":354:363  NFT = nft */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotswapLiquidity.sol\":380:383  fft */\n  dup1\n    /* \"contracts/HotswapLiquidity.sol\":374:377  FFT */\n  0x02\n  0x00\n    /* \"contracts/HotswapLiquidity.sol\":374:383  FFT = fft */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotswapLiquidity.sol\":409:412  fft */\n  dup1\n    /* \"contracts/HotswapLiquidity.sol\":396:400  _fft */\n  0x04\n  0x00\n    /* \"contracts/HotswapLiquidity.sol\":396:413  _fft = ERC20(fft) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotswapLiquidity.sol\":448:451  nft */\n  dup2\n    /* \"contracts/HotswapLiquidity.sol\":424:428  _nft */\n  0x05\n  0x00\n    /* \"contracts/HotswapLiquidity.sol\":424:452  _nft = ERC721Enumerable(nft) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotswapLiquidity.sol\":305:460  constructor(address nft, address fft) {... */\n  pop\n  pop\n    /* \"contracts/HotswapLiquidity.sol\":222:1335  contract HotswapLiquidity is HotswapBase {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":949:1068   */\ntag_29:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_31\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_32\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/HotswapLiquidity.sol\":222:1335  contract HotswapLiquidity is HotswapBase {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HotswapLiquidity.sol\":222:1335  contract HotswapLiquidity is HotswapBase {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x92eefe9b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc1d2d00d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x04bb60ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x64679356\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7c0b8de2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8cda7bb4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/HotswapLiquidity.sol\":493:511  address public FFT */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HotswapLiquidity.sol\":518:543  address public Controller */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/HotswapLiquidity.sol\":468:486  address public NFT */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HotswapLiquidity.sol\":721:872  function withdrawFFT(uint256 amount, address dest) external onlyAuthorized {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HotswapLiquidity.sol\":1240:1332  function setController(address addr) external onlyOwner {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/HotswapLiquidity.sol\":880:1232  function withdrawNFT(uint256 amount, address dest) external onlyAuthorized {... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_12:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/HotswapLiquidity.sol\":493:511  address public FFT */\n    tag_15:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/HotswapLiquidity.sol\":518:543  address public Controller */\n    tag_19:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n    tag_22:\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      tag_48\n        /* \"contracts/Ownable.sol\":584:591  isOwner */\n      tag_34\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/Ownable.sol\":576:594  require(isOwner()) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"contracts/Ownable.sol\":803:809  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":784:810  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":838:839  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":821:827  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":821:840  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/HotswapLiquidity.sol\":468:486  address public NFT */\n    tag_24:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/HotswapLiquidity.sol\":721:872  function withdrawFFT(uint256 amount, address dest) external onlyAuthorized {... */\n    tag_29:\n        /* \"contracts/HotswapLiquidity.sol\":658:664  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":644:664  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":644:654  msg.sender */\n      caller\n        /* \"contracts/HotswapLiquidity.sol\":644:664  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/HotswapLiquidity.sol\":644:692  msg.sender == _owner || msg.sender == Controller */\n      dup1\n      tag_52\n      jumpi\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":682:692  Controller */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":668:692  msg.sender == Controller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":668:678  msg.sender */\n      caller\n        /* \"contracts/HotswapLiquidity.sol\":668:692  msg.sender == Controller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/HotswapLiquidity.sol\":644:692  msg.sender == _owner || msg.sender == Controller */\n    tag_52:\n        /* \"contracts/HotswapLiquidity.sol\":636:693  require(msg.sender == _owner || msg.sender == Controller) */\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n        /* \"contracts/HotswapLiquidity.sol\":815:819  _fft */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":815:828  _fft.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/HotswapLiquidity.sol\":829:833  dest */\n      dup3\n        /* \"contracts/HotswapLiquidity.sol\":835:841  amount */\n      dup5\n        /* \"contracts/HotswapLiquidity.sol\":815:842  _fft.transfer(dest, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"contracts/HotswapLiquidity.sol\":807:864  require(_fft.transfer(dest, amount), \"Withdrawal failed\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/HotswapLiquidity.sol\":721:872  function withdrawFFT(uint256 amount, address dest) external onlyAuthorized {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n    tag_31:\n        /* \"contracts/Ownable.sol\":495:502  address */\n      0x00\n        /* \"contracts/Ownable.sol\":522:528  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":515:528  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n    tag_34:\n        /* \"contracts/Ownable.sol\":662:666  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":700:706  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":686:706  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":686:696  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":686:706  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":679:706  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/HotswapLiquidity.sol\":1240:1332  function setController(address addr) external onlyOwner {... */\n    tag_40:\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      tag_67\n        /* \"contracts/Ownable.sol\":584:591  isOwner */\n      tag_34\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      jump\t// in\n    tag_67:\n        /* \"contracts/Ownable.sol\":576:594  require(isOwner()) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/HotswapLiquidity.sol\":1320:1324  addr */\n      dup1\n        /* \"contracts/HotswapLiquidity.sol\":1307:1317  Controller */\n      0x03\n      0x00\n        /* \"contracts/HotswapLiquidity.sol\":1307:1324  Controller = addr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":1240:1332  function setController(address addr) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/HotswapLiquidity.sol\":880:1232  function withdrawNFT(uint256 amount, address dest) external onlyAuthorized {... */\n    tag_43:\n        /* \"contracts/HotswapLiquidity.sol\":658:664  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":644:664  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":644:654  msg.sender */\n      caller\n        /* \"contracts/HotswapLiquidity.sol\":644:664  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/HotswapLiquidity.sol\":644:692  msg.sender == _owner || msg.sender == Controller */\n      dup1\n      tag_71\n      jumpi\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":682:692  Controller */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":668:692  msg.sender == Controller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":668:678  msg.sender */\n      caller\n        /* \"contracts/HotswapLiquidity.sol\":668:692  msg.sender == Controller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/HotswapLiquidity.sol\":644:692  msg.sender == _owner || msg.sender == Controller */\n    tag_71:\n        /* \"contracts/HotswapLiquidity.sol\":636:693  require(msg.sender == _owner || msg.sender == Controller) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"contracts/HotswapLiquidity.sol\":966:981  uint256 tokenId */\n      0x00\n        /* \"contracts/HotswapLiquidity.sol\":992:1009  bytes memory data */\n      dup1\n        /* \"contracts/HotswapLiquidity.sol\":1022:1023  0 */\n      0x00\n        /* \"contracts/HotswapLiquidity.sol\":1012:1024  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_74\n      jumpi\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n    tag_74:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_77:\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":992:1024  bytes memory data = new bytes(0) */\n      swap1\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":1042:1051  uint256 i */\n      0x00\n        /* \"contracts/HotswapLiquidity.sol\":1037:1225  for (uint256 i = 0; i < amount; i++) {... */\n    tag_78:\n        /* \"contracts/HotswapLiquidity.sol\":1061:1067  amount */\n      dup5\n        /* \"contracts/HotswapLiquidity.sol\":1057:1058  i */\n      dup2\n        /* \"contracts/HotswapLiquidity.sol\":1057:1067  i < amount */\n      lt\n        /* \"contracts/HotswapLiquidity.sol\":1037:1225  for (uint256 i = 0; i < amount; i++) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/HotswapLiquidity.sol\":1099:1103  _nft */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":1099:1123  _nft.tokenOfOwnerByIndex */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f745c59\n        /* \"contracts/HotswapLiquidity.sol\":1132:1136  this */\n      address\n        /* \"contracts/HotswapLiquidity.sol\":1139:1140  i */\n      dup4\n        /* \"contracts/HotswapLiquidity.sol\":1099:1141  _nft.tokenOfOwnerByIndex(address(this), i) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/HotswapLiquidity.sol\":1089:1141  tokenId = _nft.tokenOfOwnerByIndex(address(this), i) */\n      swap3\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":1156:1160  _nft */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotswapLiquidity.sol\":1156:1177  _nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/HotswapLiquidity.sol\":1186:1190  this */\n      address\n        /* \"contracts/HotswapLiquidity.sol\":1193:1197  dest */\n      dup7\n        /* \"contracts/HotswapLiquidity.sol\":1199:1206  tokenId */\n      dup7\n        /* \"contracts/HotswapLiquidity.sol\":1208:1212  data */\n      dup7\n        /* \"contracts/HotswapLiquidity.sol\":1156:1213  _nft.safeTransferFrom(address(this), dest, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":1069:1072  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":1037:1225  for (uint256 i = 0; i < amount; i++) {... */\n      jump(tag_78)\n    tag_79:\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":955:1232  {... */\n      pop\n      pop\n        /* \"contracts/HotswapLiquidity.sol\":880:1232  function withdrawNFT(uint256 amount, address dest) external onlyAuthorized {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_46:\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      tag_92\n        /* \"contracts/Ownable.sol\":584:591  isOwner */\n      tag_34\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Ownable.sol\":576:594  require(isOwner()) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/Ownable.sol\":929:957  _transferOwnership(newOwner) */\n      tag_95\n        /* \"contracts/Ownable.sol\":948:956  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":929:947  _transferOwnership */\n      tag_96\n        /* \"contracts/Ownable.sol\":929:957  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":973:1160  function _transferOwnership(address newOwner) internal {... */\n    tag_96:\n        /* \"contracts/Ownable.sol\":1067:1068  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1047:1069  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1047:1055  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1047:1069  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":1039:1070  require(newOwner != address(0)) */\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n        /* \"contracts/Ownable.sol\":1115:1123  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1086:1124  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1107:1113  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1086:1124  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1144:1152  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1135:1141  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":1135:1152  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":973:1160  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_99:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_100:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_127\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_99\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_101:\n        /* \"#utility.yul\":328:352   */\n      tag_129\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_100\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_17:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_131\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_101\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_103:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:997   */\n    tag_105:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":975:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_106:\n        /* \"#utility.yul\":1076:1100   */\n      tag_137\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_105\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_138:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_107:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_140\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_106\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_108:\n        /* \"#utility.yul\":1349:1373   */\n      tag_142\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_100\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_143:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_109:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_145\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_108\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_28:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_148\n      tag_103\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1642:1761   */\n    tag_147:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_149\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_107\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_150\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_109\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2119   */\n    tag_110:\n        /* \"#utility.yul\":2063:2070   */\n      0x00\n        /* \"#utility.yul\":2106:2111   */\n      dup2\n        /* \"#utility.yul\":2099:2112   */\n      iszero\n        /* \"#utility.yul\":2092:2113   */\n      iszero\n        /* \"#utility.yul\":2081:2113   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2125:2234   */\n    tag_111:\n        /* \"#utility.yul\":2206:2227   */\n      tag_153\n        /* \"#utility.yul\":2221:2226   */\n      dup2\n        /* \"#utility.yul\":2206:2227   */\n      tag_110\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2201:2204   */\n      dup3\n        /* \"#utility.yul\":2194:2228   */\n      mstore\n        /* \"#utility.yul\":2125:2234   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2240:2450   */\n    tag_36:\n        /* \"#utility.yul\":2327:2331   */\n      0x00\n        /* \"#utility.yul\":2365:2367   */\n      0x20\n        /* \"#utility.yul\":2354:2363   */\n      dup3\n        /* \"#utility.yul\":2350:2368   */\n      add\n        /* \"#utility.yul\":2342:2368   */\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2443   */\n      tag_155\n        /* \"#utility.yul\":2440:2441   */\n      0x00\n        /* \"#utility.yul\":2429:2438   */\n      dup4\n        /* \"#utility.yul\":2425:2442   */\n      add\n        /* \"#utility.yul\":2416:2422   */\n      dup5\n        /* \"#utility.yul\":2378:2443   */\n      tag_111\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2240:2450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2785   */\n    tag_39:\n        /* \"#utility.yul\":2515:2521   */\n      0x00\n        /* \"#utility.yul\":2564:2566   */\n      0x20\n        /* \"#utility.yul\":2552:2561   */\n      dup3\n        /* \"#utility.yul\":2543:2550   */\n      dup5\n        /* \"#utility.yul\":2539:2562   */\n      sub\n        /* \"#utility.yul\":2535:2567   */\n      slt\n        /* \"#utility.yul\":2532:2651   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2570:2649   */\n      tag_158\n      tag_103\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2532:2651   */\n    tag_157:\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2715:2768   */\n      tag_159\n        /* \"#utility.yul\":2760:2767   */\n      dup5\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2740:2749   */\n      dup6\n        /* \"#utility.yul\":2736:2758   */\n      add\n        /* \"#utility.yul\":2715:2768   */\n      tag_109\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2705:2768   */\n      swap2\n      pop\n        /* \"#utility.yul\":2661:2778   */\n      pop\n        /* \"#utility.yul\":2456:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2909   */\n    tag_112:\n        /* \"#utility.yul\":2878:2902   */\n      tag_161\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2878:2902   */\n      tag_105\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2873:2876   */\n      dup3\n        /* \"#utility.yul\":2866:2903   */\n      mstore\n        /* \"#utility.yul\":2791:2909   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3247   */\n    tag_56:\n        /* \"#utility.yul\":3036:3040   */\n      0x00\n        /* \"#utility.yul\":3074:3076   */\n      0x40\n        /* \"#utility.yul\":3063:3072   */\n      dup3\n        /* \"#utility.yul\":3059:3077   */\n      add\n        /* \"#utility.yul\":3051:3077   */\n      swap1\n      pop\n        /* \"#utility.yul\":3087:3158   */\n      tag_163\n        /* \"#utility.yul\":3155:3156   */\n      0x00\n        /* \"#utility.yul\":3144:3153   */\n      dup4\n        /* \"#utility.yul\":3140:3157   */\n      add\n        /* \"#utility.yul\":3131:3137   */\n      dup6\n        /* \"#utility.yul\":3087:3158   */\n      tag_101\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3168:3240   */\n      tag_164\n        /* \"#utility.yul\":3236:3238   */\n      0x20\n        /* \"#utility.yul\":3225:3234   */\n      dup4\n        /* \"#utility.yul\":3221:3239   */\n      add\n        /* \"#utility.yul\":3212:3218   */\n      dup5\n        /* \"#utility.yul\":3168:3240   */\n      tag_112\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2915:3247   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3253:3369   */\n    tag_113:\n        /* \"#utility.yul\":3323:3344   */\n      tag_166\n        /* \"#utility.yul\":3338:3343   */\n      dup2\n        /* \"#utility.yul\":3323:3344   */\n      tag_110\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3316:3321   */\n      dup2\n        /* \"#utility.yul\":3313:3345   */\n      eq\n        /* \"#utility.yul\":3303:3363   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":3359:3360   */\n      0x00\n        /* \"#utility.yul\":3356:3357   */\n      dup1\n        /* \"#utility.yul\":3349:3361   */\n      revert\n        /* \"#utility.yul\":3303:3363   */\n    tag_167:\n        /* \"#utility.yul\":3253:3369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3512   */\n    tag_114:\n        /* \"#utility.yul\":3429:3434   */\n      0x00\n        /* \"#utility.yul\":3460:3466   */\n      dup2\n        /* \"#utility.yul\":3454:3467   */\n      mload\n        /* \"#utility.yul\":3445:3467   */\n      swap1\n      pop\n        /* \"#utility.yul\":3476:3506   */\n      tag_169\n        /* \"#utility.yul\":3500:3505   */\n      dup2\n        /* \"#utility.yul\":3476:3506   */\n      tag_113\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3375:3512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3518:3863   */\n    tag_60:\n        /* \"#utility.yul\":3585:3591   */\n      0x00\n        /* \"#utility.yul\":3634:3636   */\n      0x20\n        /* \"#utility.yul\":3622:3631   */\n      dup3\n        /* \"#utility.yul\":3613:3620   */\n      dup5\n        /* \"#utility.yul\":3609:3632   */\n      sub\n        /* \"#utility.yul\":3605:3637   */\n      slt\n        /* \"#utility.yul\":3602:3721   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":3640:3719   */\n      tag_172\n      tag_103\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3602:3721   */\n    tag_171:\n        /* \"#utility.yul\":3760:3761   */\n      0x00\n        /* \"#utility.yul\":3785:3846   */\n      tag_173\n        /* \"#utility.yul\":3838:3845   */\n      dup5\n        /* \"#utility.yul\":3829:3835   */\n      dup3\n        /* \"#utility.yul\":3818:3827   */\n      dup6\n        /* \"#utility.yul\":3814:3836   */\n      add\n        /* \"#utility.yul\":3785:3846   */\n      tag_114\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3775:3846   */\n      swap2\n      pop\n        /* \"#utility.yul\":3731:3856   */\n      pop\n        /* \"#utility.yul\":3518:3863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3869:4038   */\n    tag_115:\n        /* \"#utility.yul\":3953:3964   */\n      0x00\n        /* \"#utility.yul\":3987:3993   */\n      dup3\n        /* \"#utility.yul\":3982:3985   */\n      dup3\n        /* \"#utility.yul\":3975:3994   */\n      mstore\n        /* \"#utility.yul\":4027:4031   */\n      0x20\n        /* \"#utility.yul\":4022:4025   */\n      dup3\n        /* \"#utility.yul\":4018:4032   */\n      add\n        /* \"#utility.yul\":4003:4032   */\n      swap1\n      pop\n        /* \"#utility.yul\":3869:4038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4044:4211   */\n    tag_116:\n        /* \"#utility.yul\":4184:4203   */\n      0x5769746864726177616c206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":4180:4181   */\n      0x00\n        /* \"#utility.yul\":4172:4178   */\n      dup3\n        /* \"#utility.yul\":4168:4182   */\n      add\n        /* \"#utility.yul\":4161:4204   */\n      mstore\n        /* \"#utility.yul\":4044:4211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4217:4583   */\n    tag_117:\n        /* \"#utility.yul\":4359:4362   */\n      0x00\n        /* \"#utility.yul\":4380:4447   */\n      tag_177\n        /* \"#utility.yul\":4444:4446   */\n      0x11\n        /* \"#utility.yul\":4439:4442   */\n      dup4\n        /* \"#utility.yul\":4380:4447   */\n      tag_115\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4373:4447   */\n      swap2\n      pop\n        /* \"#utility.yul\":4456:4549   */\n      tag_178\n        /* \"#utility.yul\":4545:4548   */\n      dup3\n        /* \"#utility.yul\":4456:4549   */\n      tag_116\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4574:4576   */\n      0x20\n        /* \"#utility.yul\":4569:4572   */\n      dup3\n        /* \"#utility.yul\":4565:4577   */\n      add\n        /* \"#utility.yul\":4558:4577   */\n      swap1\n      pop\n        /* \"#utility.yul\":4217:4583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4589:5008   */\n    tag_63:\n        /* \"#utility.yul\":4755:4759   */\n      0x00\n        /* \"#utility.yul\":4793:4795   */\n      0x20\n        /* \"#utility.yul\":4782:4791   */\n      dup3\n        /* \"#utility.yul\":4778:4796   */\n      add\n        /* \"#utility.yul\":4770:4796   */\n      swap1\n      pop\n        /* \"#utility.yul\":4842:4851   */\n      dup2\n        /* \"#utility.yul\":4836:4840   */\n      dup2\n        /* \"#utility.yul\":4832:4852   */\n      sub\n        /* \"#utility.yul\":4828:4829   */\n      0x00\n        /* \"#utility.yul\":4817:4826   */\n      dup4\n        /* \"#utility.yul\":4813:4830   */\n      add\n        /* \"#utility.yul\":4806:4853   */\n      mstore\n        /* \"#utility.yul\":4870:5001   */\n      tag_180\n        /* \"#utility.yul\":4996:5000   */\n      dup2\n        /* \"#utility.yul\":4870:5001   */\n      tag_117\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4862:5001   */\n      swap1\n      pop\n        /* \"#utility.yul\":4589:5008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5194   */\n    tag_76:\n        /* \"#utility.yul\":5062:5139   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5059:5060   */\n      0x00\n        /* \"#utility.yul\":5052:5140   */\n      mstore\n        /* \"#utility.yul\":5159:5163   */\n      0x41\n        /* \"#utility.yul\":5156:5157   */\n      0x04\n        /* \"#utility.yul\":5149:5164   */\n      mstore\n        /* \"#utility.yul\":5183:5187   */\n      0x24\n        /* \"#utility.yul\":5180:5181   */\n      0x00\n        /* \"#utility.yul\":5173:5188   */\n      revert\n        /* \"#utility.yul\":5200:5343   */\n    tag_118:\n        /* \"#utility.yul\":5257:5262   */\n      0x00\n        /* \"#utility.yul\":5288:5294   */\n      dup2\n        /* \"#utility.yul\":5282:5295   */\n      mload\n        /* \"#utility.yul\":5273:5295   */\n      swap1\n      pop\n        /* \"#utility.yul\":5304:5337   */\n      tag_183\n        /* \"#utility.yul\":5331:5336   */\n      dup2\n        /* \"#utility.yul\":5304:5337   */\n      tag_106\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5200:5343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5349:5700   */\n    tag_85:\n        /* \"#utility.yul\":5419:5425   */\n      0x00\n        /* \"#utility.yul\":5468:5470   */\n      0x20\n        /* \"#utility.yul\":5456:5465   */\n      dup3\n        /* \"#utility.yul\":5447:5454   */\n      dup5\n        /* \"#utility.yul\":5443:5466   */\n      sub\n        /* \"#utility.yul\":5439:5471   */\n      slt\n        /* \"#utility.yul\":5436:5555   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":5474:5553   */\n      tag_186\n      tag_103\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5436:5555   */\n    tag_185:\n        /* \"#utility.yul\":5594:5595   */\n      0x00\n        /* \"#utility.yul\":5619:5683   */\n      tag_187\n        /* \"#utility.yul\":5675:5682   */\n      dup5\n        /* \"#utility.yul\":5666:5672   */\n      dup3\n        /* \"#utility.yul\":5655:5664   */\n      dup6\n        /* \"#utility.yul\":5651:5673   */\n      add\n        /* \"#utility.yul\":5619:5683   */\n      tag_118\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5609:5683   */\n      swap2\n      pop\n        /* \"#utility.yul\":5565:5693   */\n      pop\n        /* \"#utility.yul\":5349:5700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5706:5804   */\n    tag_119:\n        /* \"#utility.yul\":5757:5763   */\n      0x00\n        /* \"#utility.yul\":5791:5796   */\n      dup2\n        /* \"#utility.yul\":5785:5797   */\n      mload\n        /* \"#utility.yul\":5775:5797   */\n      swap1\n      pop\n        /* \"#utility.yul\":5706:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5810:5978   */\n    tag_120:\n        /* \"#utility.yul\":5893:5904   */\n      0x00\n        /* \"#utility.yul\":5927:5933   */\n      dup3\n        /* \"#utility.yul\":5922:5925   */\n      dup3\n        /* \"#utility.yul\":5915:5934   */\n      mstore\n        /* \"#utility.yul\":5967:5971   */\n      0x20\n        /* \"#utility.yul\":5962:5965   */\n      dup3\n        /* \"#utility.yul\":5958:5972   */\n      add\n        /* \"#utility.yul\":5943:5972   */\n      swap1\n      pop\n        /* \"#utility.yul\":5810:5978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5984:6123   */\n    tag_121:\n        /* \"#utility.yul\":6073:6079   */\n      dup3\n        /* \"#utility.yul\":6068:6071   */\n      dup2\n        /* \"#utility.yul\":6063:6066   */\n      dup4\n        /* \"#utility.yul\":6057:6080   */\n      mcopy\n        /* \"#utility.yul\":6114:6115   */\n      0x00\n        /* \"#utility.yul\":6105:6111   */\n      dup4\n        /* \"#utility.yul\":6100:6103   */\n      dup4\n        /* \"#utility.yul\":6096:6112   */\n      add\n        /* \"#utility.yul\":6089:6116   */\n      mstore\n        /* \"#utility.yul\":5984:6123   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6129:6231   */\n    tag_122:\n        /* \"#utility.yul\":6170:6176   */\n      0x00\n        /* \"#utility.yul\":6221:6223   */\n      0x1f\n        /* \"#utility.yul\":6217:6224   */\n      not\n        /* \"#utility.yul\":6212:6214   */\n      0x1f\n        /* \"#utility.yul\":6205:6210   */\n      dup4\n        /* \"#utility.yul\":6201:6215   */\n      add\n        /* \"#utility.yul\":6197:6225   */\n      and\n        /* \"#utility.yul\":6187:6225   */\n      swap1\n      pop\n        /* \"#utility.yul\":6129:6231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6237:6610   */\n    tag_123:\n        /* \"#utility.yul\":6323:6326   */\n      0x00\n        /* \"#utility.yul\":6351:6389   */\n      tag_193\n        /* \"#utility.yul\":6383:6388   */\n      dup3\n        /* \"#utility.yul\":6351:6389   */\n      tag_119\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6405:6475   */\n      tag_194\n        /* \"#utility.yul\":6468:6474   */\n      dup2\n        /* \"#utility.yul\":6463:6466   */\n      dup6\n        /* \"#utility.yul\":6405:6475   */\n      tag_120\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6398:6475   */\n      swap4\n      pop\n        /* \"#utility.yul\":6484:6549   */\n      tag_195\n        /* \"#utility.yul\":6542:6548   */\n      dup2\n        /* \"#utility.yul\":6537:6540   */\n      dup6\n        /* \"#utility.yul\":6530:6534   */\n      0x20\n        /* \"#utility.yul\":6523:6528   */\n      dup7\n        /* \"#utility.yul\":6519:6535   */\n      add\n        /* \"#utility.yul\":6484:6549   */\n      tag_121\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6574:6603   */\n      tag_196\n        /* \"#utility.yul\":6596:6602   */\n      dup2\n        /* \"#utility.yul\":6574:6603   */\n      tag_122\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6569:6572   */\n      dup5\n        /* \"#utility.yul\":6565:6604   */\n      add\n        /* \"#utility.yul\":6558:6604   */\n      swap2\n      pop\n        /* \"#utility.yul\":6327:6610   */\n      pop\n        /* \"#utility.yul\":6237:6610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6616:7256   */\n    tag_87:\n        /* \"#utility.yul\":6811:6815   */\n      0x00\n        /* \"#utility.yul\":6849:6852   */\n      0x80\n        /* \"#utility.yul\":6838:6847   */\n      dup3\n        /* \"#utility.yul\":6834:6853   */\n      add\n        /* \"#utility.yul\":6826:6853   */\n      swap1\n      pop\n        /* \"#utility.yul\":6863:6934   */\n      tag_198\n        /* \"#utility.yul\":6931:6932   */\n      0x00\n        /* \"#utility.yul\":6920:6929   */\n      dup4\n        /* \"#utility.yul\":6916:6933   */\n      add\n        /* \"#utility.yul\":6907:6913   */\n      dup8\n        /* \"#utility.yul\":6863:6934   */\n      tag_101\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6944:7016   */\n      tag_199\n        /* \"#utility.yul\":7012:7014   */\n      0x20\n        /* \"#utility.yul\":7001:7010   */\n      dup4\n        /* \"#utility.yul\":6997:7015   */\n      add\n        /* \"#utility.yul\":6988:6994   */\n      dup7\n        /* \"#utility.yul\":6944:7016   */\n      tag_101\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7026:7098   */\n      tag_200\n        /* \"#utility.yul\":7094:7096   */\n      0x40\n        /* \"#utility.yul\":7083:7092   */\n      dup4\n        /* \"#utility.yul\":7079:7097   */\n      add\n        /* \"#utility.yul\":7070:7076   */\n      dup6\n        /* \"#utility.yul\":7026:7098   */\n      tag_112\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7145:7154   */\n      dup2\n        /* \"#utility.yul\":7139:7143   */\n      dup2\n        /* \"#utility.yul\":7135:7155   */\n      sub\n        /* \"#utility.yul\":7130:7132   */\n      0x60\n        /* \"#utility.yul\":7119:7128   */\n      dup4\n        /* \"#utility.yul\":7115:7133   */\n      add\n        /* \"#utility.yul\":7108:7156   */\n      mstore\n        /* \"#utility.yul\":7173:7249   */\n      tag_201\n        /* \"#utility.yul\":7244:7248   */\n      dup2\n        /* \"#utility.yul\":7235:7241   */\n      dup5\n        /* \"#utility.yul\":7173:7249   */\n      tag_123\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7165:7249   */\n      swap1\n      pop\n        /* \"#utility.yul\":6616:7256   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122031faec28b6ab4a5c0d65ce70c6515be6018c3dff5a7c2ba11a5805d347e3758664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:6",
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610e55380380610e55833981810160405281019061003191906101d5565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610213565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101a48261017b565b9050919050565b6101b48161019a565b81146101be575f80fd5b50565b5f815190506101cf816101ab565b92915050565b5f80604083850312156101eb576101ea610177565b5b5f6101f8858286016101c1565b9250506020610209858286016101c1565b9150509250929050565b610c35806102205f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c80638da5cb5b116100645780638da5cb5b146101205780638f32d59b1461013e57806392eefe9b1461015c578063c1d2d00d14610178578063f2fde38b146101945761009c565b806304bb60ce146100a057806364679356146100be578063715018a6146100dc5780637c0b8de2146100e65780638cda7bb414610104575b5f80fd5b6100a86101b0565b6040516100b591906108c0565b60405180910390f35b6100c66101d5565b6040516100d391906108c0565b60405180910390f35b6100e46101fa565b005b6100ee6102ad565b6040516100fb91906108c0565b60405180910390f35b61011e6004803603810190610119919061093a565b6102d2565b005b61012861045e565b60405161013591906108c0565b60405180910390f35b610146610485565b6040516101539190610992565b60405180910390f35b610176600480360381019061017191906109ab565b6104da565b005b610192600480360381019061018d919061093a565b61052d565b005b6101ae60048036038101906101a991906109ab565b610773565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610202610485565b61020a575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610377575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61037f575f80fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016103db9291906109e5565b6020604051808303815f875af11580156103f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041b9190610a36565b61045a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045190610abb565b60405180910390fd5b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6104e2610485565b6104ea575f80fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105d2575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105da575f80fd5b5f805f67ffffffffffffffff8111156105f6576105f5610ad9565b5b6040519080825280601f01601f1916602001820160405280156106285781602001600182028036833780820191505090505b5090505f5b8481101561076c5760055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5930836040518363ffffffff1660e01b81526004016106919291906109e5565b602060405180830381865afa1580156106ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106d09190610b1a565b925060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde308686866040518563ffffffff1660e01b81526004016107329493929190610bb5565b5f604051808303815f87803b158015610749575f80fd5b505af115801561075b573d5f803e3d5ffd5b50505050808060010191505061062d565b5050505050565b61077b610485565b610783575f80fd5b61078c8161078f565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c6575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108aa82610881565b9050919050565b6108ba816108a0565b82525050565b5f6020820190506108d35f8301846108b1565b92915050565b5f80fd5b5f819050919050565b6108ef816108dd565b81146108f9575f80fd5b50565b5f8135905061090a816108e6565b92915050565b610919816108a0565b8114610923575f80fd5b50565b5f8135905061093481610910565b92915050565b5f80604083850312156109505761094f6108d9565b5b5f61095d858286016108fc565b925050602061096e85828601610926565b9150509250929050565b5f8115159050919050565b61098c81610978565b82525050565b5f6020820190506109a55f830184610983565b92915050565b5f602082840312156109c0576109bf6108d9565b5b5f6109cd84828501610926565b91505092915050565b6109df816108dd565b82525050565b5f6040820190506109f85f8301856108b1565b610a0560208301846109d6565b9392505050565b610a1581610978565b8114610a1f575f80fd5b50565b5f81519050610a3081610a0c565b92915050565b5f60208284031215610a4b57610a4a6108d9565b5b5f610a5884828501610a22565b91505092915050565b5f82825260208201905092915050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f610aa5601183610a61565b9150610ab082610a71565b602082019050919050565b5f6020820190508181035f830152610ad281610a99565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050610b14816108e6565b92915050565b5f60208284031215610b2f57610b2e6108d9565b5b5f610b3c84828501610b06565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610b8782610b45565b610b918185610b4f565b9350610ba1818560208601610b5f565b610baa81610b6d565b840191505092915050565b5f608082019050610bc85f8301876108b1565b610bd560208301866108b1565b610be260408301856109d6565b8181036060830152610bf48184610b7d565b90509594505050505056fea264697066735822122031faec28b6ab4a5c0d65ce70c6515be6018c3dff5a7c2ba11a5805d347e3758664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE55 CODESIZE SUB DUP1 PUSH2 0xE55 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x213 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4 DUP3 PUSH2 0x17B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4 DUP2 PUSH2 0x19A JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF DUP2 PUSH2 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x177 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x209 DUP6 DUP3 DUP7 ADD PUSH2 0x1C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC35 DUP1 PUSH2 0x220 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xC1D2D00D EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x194 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x4BB60CE EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x64679356 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x7C0B8DE2 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8CDA7BB4 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x202 PUSH2 0x485 JUMP JUMPDEST PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x377 JUMPI POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP3 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x451 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x485 JUMP JUMPDEST PUSH2 0x4EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5D2 JUMPI POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F5 PUSH2 0xAD9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x628 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x76C JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F745C59 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP3 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x62D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x77B PUSH2 0x485 JUMP JUMPDEST PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP2 PUSH2 0x78F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BA DUP2 PUSH2 0x8A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EF DUP2 PUSH2 0x8DD JUMP JUMPDEST DUP2 EQ PUSH2 0x8F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x90A DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x919 DUP2 PUSH2 0x8A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x923 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x934 DUP2 PUSH2 0x910 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x950 JUMPI PUSH2 0x94F PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x95D DUP6 DUP3 DUP7 ADD PUSH2 0x8FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x96E DUP6 DUP3 DUP7 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x978 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CD DUP5 DUP3 DUP6 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DF DUP2 PUSH2 0x8DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9F8 PUSH0 DUP4 ADD DUP6 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0xA05 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA15 DUP2 PUSH2 0x978 JUMP JUMPDEST DUP2 EQ PUSH2 0xA1F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA30 DUP2 PUSH2 0xA0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA58 DUP5 DUP3 DUP6 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAA5 PUSH1 0x11 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB0 DUP3 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAD2 DUP2 PUSH2 0xA99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB14 DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3C DUP5 DUP3 DUP6 ADD PUSH2 0xB06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB87 DUP3 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB91 DUP2 DUP6 PUSH2 0xB4F JUMP JUMPDEST SWAP4 POP PUSH2 0xBA1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB5F JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xB6D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xBC8 PUSH0 DUP4 ADD DUP8 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0xBD5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0xBE2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9D6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xBF4 DUP2 DUP5 PUSH2 0xB7D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE STATICCALL 0xEC 0x28 0xB6 0xAB BLOBBASEFEE TLOAD 0xD PUSH6 0xCE70C6515BE6 ADD DUP13 RETURNDATASIZE SELFDESTRUCT GAS PUSH29 0x2BA11A5805D347E3758664736F6C634300081900330000000000000000 ",
							"sourceMap": "222:1113:1:-:0;;;305:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;431:10:2;422:6;;:19;;;;;;;;;;;;;;;;;;360:3:1;354;;:9;;;;;;;;;;;;;;;;;;380:3;374;;:9;;;;;;;;;;;;;;;;;;409:3;396:4;;:17;;;;;;;;;;;;;;;;;;448:3;424:4;;:28;;;;;;;;;;;;;;;;;;305:155;;222:1113;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;222:1113:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Controller_82": {
									"entryPoint": 469,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FFT_80": {
									"entryPoint": 432,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFT_78": {
									"entryPoint": 685,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_303": {
									"entryPoint": 1935,
									"id": 303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_250": {
									"entryPoint": 1157,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_230": {
									"entryPoint": 1118,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_267": {
									"entryPoint": 506,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setController_190": {
									"entryPoint": 1242,
									"id": 190,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_279": {
									"entryPoint": 1907,
									"id": 279,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFFT_123": {
									"entryPoint": 722,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawNFT_178": {
									"entryPoint": 1325,
									"id": 178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 2362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88": {
									"entryPoint": 2673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7259:6",
										"nodeType": "YulBlock",
										"src": "0:7259:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "463:124:6",
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nativeSrc": "473:26:6",
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:6",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:18:6",
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:6",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nativeSrc": "562:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nativeSrc": "509:71:6",
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nativeSrc": "509:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:6",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:6",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:6",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nativeSrc": "633:35:6",
													"nodeType": "YulBlock",
													"src": "633:35:6",
													"statements": [
														{
															"nativeSrc": "643:19:6",
															"nodeType": "YulAssignment",
															"src": "643:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "659:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:6"
																},
																"nativeSrc": "653:9:6",
																"nodeType": "YulFunctionCall",
																"src": "653:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:6",
														"nodeType": "YulTypedName",
														"src": "626:6:6",
														"type": ""
													}
												],
												"src": "593:75:6"
											},
											{
												"body": {
													"nativeSrc": "763:28:6",
													"nodeType": "YulBlock",
													"src": "763:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:6",
																		"nodeType": "YulLiteral",
																		"src": "780:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:6",
																		"nodeType": "YulLiteral",
																		"src": "783:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																},
																"nativeSrc": "773:12:6",
																"nodeType": "YulFunctionCall",
																"src": "773:12:6"
															},
															"nativeSrc": "773:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:6"
											},
											{
												"body": {
													"nativeSrc": "886:28:6",
													"nodeType": "YulBlock",
													"src": "886:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:6",
																		"nodeType": "YulLiteral",
																		"src": "903:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:6",
																		"nodeType": "YulLiteral",
																		"src": "906:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:6"
																},
																"nativeSrc": "896:12:6",
																"nodeType": "YulFunctionCall",
																"src": "896:12:6"
															},
															"nativeSrc": "896:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:6"
											},
											{
												"body": {
													"nativeSrc": "965:32:6",
													"nodeType": "YulBlock",
													"src": "965:32:6",
													"statements": [
														{
															"nativeSrc": "975:16:6",
															"nodeType": "YulAssignment",
															"src": "975:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "986:5:6",
																"nodeType": "YulIdentifier",
																"src": "986:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "975:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "920:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "947:5:6",
														"nodeType": "YulTypedName",
														"src": "947:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "957:7:6",
														"nodeType": "YulTypedName",
														"src": "957:7:6",
														"type": ""
													}
												],
												"src": "920:77:6"
											},
											{
												"body": {
													"nativeSrc": "1046:79:6",
													"nodeType": "YulBlock",
													"src": "1046:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:6",
																"nodeType": "YulBlock",
																"src": "1103:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:6"
																			},
																			"nativeSrc": "1105:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:6"
																		},
																		"nativeSrc": "1105:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1076:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:6"
																				},
																				"nativeSrc": "1076:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:6"
																		},
																		"nativeSrc": "1066:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:6"
																},
																"nativeSrc": "1059:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:6"
															},
															"nativeSrc": "1056:63:6",
															"nodeType": "YulIf",
															"src": "1056:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1003:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:6",
														"nodeType": "YulTypedName",
														"src": "1039:5:6",
														"type": ""
													}
												],
												"src": "1003:122:6"
											},
											{
												"body": {
													"nativeSrc": "1183:87:6",
													"nodeType": "YulBlock",
													"src": "1183:87:6",
													"statements": [
														{
															"nativeSrc": "1193:29:6",
															"nodeType": "YulAssignment",
															"src": "1193:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:6"
																},
																"nativeSrc": "1202:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1231:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:6"
																},
																"nativeSrc": "1231:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:6"
															},
															"nativeSrc": "1231:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1131:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:6",
														"nodeType": "YulTypedName",
														"src": "1161:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:6",
														"nodeType": "YulTypedName",
														"src": "1169:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:6",
														"nodeType": "YulTypedName",
														"src": "1177:5:6",
														"type": ""
													}
												],
												"src": "1131:139:6"
											},
											{
												"body": {
													"nativeSrc": "1319:79:6",
													"nodeType": "YulBlock",
													"src": "1319:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:6",
																"nodeType": "YulBlock",
																"src": "1376:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:6"
																			},
																			"nativeSrc": "1378:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:6"
																		},
																		"nativeSrc": "1378:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1349:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:6"
																				},
																				"nativeSrc": "1349:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:6"
																		},
																		"nativeSrc": "1339:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:6"
																},
																"nativeSrc": "1332:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:6"
															},
															"nativeSrc": "1329:63:6",
															"nodeType": "YulIf",
															"src": "1329:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1276:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													}
												],
												"src": "1276:122:6"
											},
											{
												"body": {
													"nativeSrc": "1456:87:6",
													"nodeType": "YulBlock",
													"src": "1456:87:6",
													"statements": [
														{
															"nativeSrc": "1466:29:6",
															"nodeType": "YulAssignment",
															"src": "1466:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:6"
																},
																"nativeSrc": "1475:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1504:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:6"
																},
																"nativeSrc": "1504:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:6"
															},
															"nativeSrc": "1504:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1404:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:6",
														"nodeType": "YulTypedName",
														"src": "1434:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:6",
														"nodeType": "YulTypedName",
														"src": "1442:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:6",
														"nodeType": "YulTypedName",
														"src": "1450:5:6",
														"type": ""
													}
												],
												"src": "1404:139:6"
											},
											{
												"body": {
													"nativeSrc": "1632:391:6",
													"nodeType": "YulBlock",
													"src": "1632:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1678:83:6",
																"nodeType": "YulBlock",
																"src": "1678:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1680:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:6"
																			},
																			"nativeSrc": "1680:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:6"
																		},
																		"nativeSrc": "1680:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1653:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1649:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:6"
																		},
																		"nativeSrc": "1649:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:6"
																},
																"nativeSrc": "1645:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1645:32:6"
															},
															"nativeSrc": "1642:119:6",
															"nodeType": "YulIf",
															"src": "1642:119:6"
														},
														{
															"nativeSrc": "1771:117:6",
															"nodeType": "YulBlock",
															"src": "1771:117:6",
															"statements": [
																{
																	"nativeSrc": "1786:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1800:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1790:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1815:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1815:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1850:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1861:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:6"
																				},
																				"nativeSrc": "1846:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1870:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1825:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:6"
																		},
																		"nativeSrc": "1825:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1815:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1898:118:6",
															"nodeType": "YulBlock",
															"src": "1898:118:6",
															"statements": [
																{
																	"nativeSrc": "1913:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1927:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1917:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:6"
																				},
																				"nativeSrc": "1974:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1953:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:6"
																		},
																		"nativeSrc": "1953:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1943:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1549:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:6",
														"nodeType": "YulTypedName",
														"src": "1594:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:6",
														"nodeType": "YulTypedName",
														"src": "1617:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1625:6:6",
														"nodeType": "YulTypedName",
														"src": "1625:6:6",
														"type": ""
													}
												],
												"src": "1549:474:6"
											},
											{
												"body": {
													"nativeSrc": "2071:48:6",
													"nodeType": "YulBlock",
													"src": "2071:48:6",
													"statements": [
														{
															"nativeSrc": "2081:32:6",
															"nodeType": "YulAssignment",
															"src": "2081:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2106:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2106:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2099:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2099:6:6"
																		},
																		"nativeSrc": "2099:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2099:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2092:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:6"
																},
																"nativeSrc": "2092:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2092:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2081:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2081:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2029:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2053:5:6",
														"nodeType": "YulTypedName",
														"src": "2053:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2063:7:6",
														"nodeType": "YulTypedName",
														"src": "2063:7:6",
														"type": ""
													}
												],
												"src": "2029:90:6"
											},
											{
												"body": {
													"nativeSrc": "2184:50:6",
													"nodeType": "YulBlock",
													"src": "2184:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2201:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2201:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2221:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2221:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2206:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "2206:14:6"
																		},
																		"nativeSrc": "2206:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2206:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:6"
																},
																"nativeSrc": "2194:34:6",
																"nodeType": "YulFunctionCall",
																"src": "2194:34:6"
															},
															"nativeSrc": "2194:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "2194:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2125:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2172:5:6",
														"nodeType": "YulTypedName",
														"src": "2172:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2179:3:6",
														"nodeType": "YulTypedName",
														"src": "2179:3:6",
														"type": ""
													}
												],
												"src": "2125:109:6"
											},
											{
												"body": {
													"nativeSrc": "2332:118:6",
													"nodeType": "YulBlock",
													"src": "2332:118:6",
													"statements": [
														{
															"nativeSrc": "2342:26:6",
															"nodeType": "YulAssignment",
															"src": "2342:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2354:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2354:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2365:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2365:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2350:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2350:3:6"
																},
																"nativeSrc": "2350:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2350:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2342:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2342:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2416:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2429:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2440:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2440:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2425:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:6"
																		},
																		"nativeSrc": "2425:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2425:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2378:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "2378:37:6"
																},
																"nativeSrc": "2378:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2378:65:6"
															},
															"nativeSrc": "2378:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2378:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2240:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2304:9:6",
														"nodeType": "YulTypedName",
														"src": "2304:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2316:6:6",
														"nodeType": "YulTypedName",
														"src": "2316:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2327:4:6",
														"nodeType": "YulTypedName",
														"src": "2327:4:6",
														"type": ""
													}
												],
												"src": "2240:210:6"
											},
											{
												"body": {
													"nativeSrc": "2522:263:6",
													"nodeType": "YulBlock",
													"src": "2522:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2568:83:6",
																"nodeType": "YulBlock",
																"src": "2568:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2570:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2570:77:6"
																			},
																			"nativeSrc": "2570:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2570:79:6"
																		},
																		"nativeSrc": "2570:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2570:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2543:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2543:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2552:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2539:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2539:3:6"
																		},
																		"nativeSrc": "2539:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2539:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2564:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2564:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2535:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2535:3:6"
																},
																"nativeSrc": "2535:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2535:32:6"
															},
															"nativeSrc": "2532:119:6",
															"nodeType": "YulIf",
															"src": "2532:119:6"
														},
														{
															"nativeSrc": "2661:117:6",
															"nodeType": "YulBlock",
															"src": "2661:117:6",
															"statements": [
																{
																	"nativeSrc": "2676:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2676:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2690:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2690:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2680:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2680:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2705:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2705:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2740:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2740:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2751:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2751:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2736:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2736:3:6"
																				},
																				"nativeSrc": "2736:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2736:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2760:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2760:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2715:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2715:20:6"
																		},
																		"nativeSrc": "2715:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2715:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2705:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2705:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2456:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2492:9:6",
														"nodeType": "YulTypedName",
														"src": "2492:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2503:7:6",
														"nodeType": "YulTypedName",
														"src": "2503:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2515:6:6",
														"nodeType": "YulTypedName",
														"src": "2515:6:6",
														"type": ""
													}
												],
												"src": "2456:329:6"
											},
											{
												"body": {
													"nativeSrc": "2856:53:6",
													"nodeType": "YulBlock",
													"src": "2856:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2873:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2873:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2878:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2878:17:6"
																		},
																		"nativeSrc": "2878:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2866:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:6"
																},
																"nativeSrc": "2866:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2866:37:6"
															},
															"nativeSrc": "2866:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2866:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2791:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2844:5:6",
														"nodeType": "YulTypedName",
														"src": "2844:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2851:3:6",
														"nodeType": "YulTypedName",
														"src": "2851:3:6",
														"type": ""
													}
												],
												"src": "2791:118:6"
											},
											{
												"body": {
													"nativeSrc": "3041:206:6",
													"nodeType": "YulBlock",
													"src": "3041:206:6",
													"statements": [
														{
															"nativeSrc": "3051:26:6",
															"nodeType": "YulAssignment",
															"src": "3051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:6"
																},
																"nativeSrc": "3059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3131:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3131:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3144:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3155:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3155:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3140:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3140:3:6"
																		},
																		"nativeSrc": "3140:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3140:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3087:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3087:43:6"
																},
																"nativeSrc": "3087:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3087:71:6"
															},
															"nativeSrc": "3087:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3087:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3212:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3212:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3225:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3225:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3236:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3236:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3221:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:6"
																		},
																		"nativeSrc": "3221:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3168:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3168:43:6"
																},
																"nativeSrc": "3168:72:6",
																"nodeType": "YulFunctionCall",
																"src": "3168:72:6"
															},
															"nativeSrc": "3168:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "3168:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2915:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3005:9:6",
														"nodeType": "YulTypedName",
														"src": "3005:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3017:6:6",
														"nodeType": "YulTypedName",
														"src": "3017:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3025:6:6",
														"nodeType": "YulTypedName",
														"src": "3025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3036:4:6",
														"nodeType": "YulTypedName",
														"src": "3036:4:6",
														"type": ""
													}
												],
												"src": "2915:332:6"
											},
											{
												"body": {
													"nativeSrc": "3293:76:6",
													"nodeType": "YulBlock",
													"src": "3293:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3347:16:6",
																"nodeType": "YulBlock",
																"src": "3347:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3356:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3356:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3359:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3359:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3349:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3349:6:6"
																			},
																			"nativeSrc": "3349:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3349:12:6"
																		},
																		"nativeSrc": "3349:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3349:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3316:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3316:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3338:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3338:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3323:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "3323:14:6"
																				},
																				"nativeSrc": "3323:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3323:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3313:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3313:2:6"
																		},
																		"nativeSrc": "3313:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3313:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3306:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:6"
																},
																"nativeSrc": "3306:40:6",
																"nodeType": "YulFunctionCall",
																"src": "3306:40:6"
															},
															"nativeSrc": "3303:60:6",
															"nodeType": "YulIf",
															"src": "3303:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3253:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3286:5:6",
														"nodeType": "YulTypedName",
														"src": "3286:5:6",
														"type": ""
													}
												],
												"src": "3253:116:6"
											},
											{
												"body": {
													"nativeSrc": "3435:77:6",
													"nodeType": "YulBlock",
													"src": "3435:77:6",
													"statements": [
														{
															"nativeSrc": "3445:22:6",
															"nodeType": "YulAssignment",
															"src": "3445:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3460:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3460:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3454:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3454:5:6"
																},
																"nativeSrc": "3454:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3454:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3445:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3445:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3500:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3500:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3476:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "3476:23:6"
																},
																"nativeSrc": "3476:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3476:30:6"
															},
															"nativeSrc": "3476:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3476:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "3375:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3413:6:6",
														"nodeType": "YulTypedName",
														"src": "3413:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3421:3:6",
														"nodeType": "YulTypedName",
														"src": "3421:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3429:5:6",
														"nodeType": "YulTypedName",
														"src": "3429:5:6",
														"type": ""
													}
												],
												"src": "3375:137:6"
											},
											{
												"body": {
													"nativeSrc": "3592:271:6",
													"nodeType": "YulBlock",
													"src": "3592:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3638:83:6",
																"nodeType": "YulBlock",
																"src": "3638:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3640:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3640:77:6"
																			},
																			"nativeSrc": "3640:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3640:79:6"
																		},
																		"nativeSrc": "3640:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3640:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3613:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3613:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3622:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3622:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3609:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3609:3:6"
																		},
																		"nativeSrc": "3609:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3609:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3634:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3634:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3605:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3605:3:6"
																},
																"nativeSrc": "3605:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3605:32:6"
															},
															"nativeSrc": "3602:119:6",
															"nodeType": "YulIf",
															"src": "3602:119:6"
														},
														{
															"nativeSrc": "3731:125:6",
															"nodeType": "YulBlock",
															"src": "3731:125:6",
															"statements": [
																{
																	"nativeSrc": "3746:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3746:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3760:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3760:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3750:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3750:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3775:71:6",
																	"nodeType": "YulAssignment",
																	"src": "3775:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3818:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3818:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3829:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3829:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3814:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3814:3:6"
																				},
																				"nativeSrc": "3814:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3814:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3838:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3838:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "3785:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "3785:28:6"
																		},
																		"nativeSrc": "3785:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3785:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3775:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3775:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3518:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3562:9:6",
														"nodeType": "YulTypedName",
														"src": "3562:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3573:7:6",
														"nodeType": "YulTypedName",
														"src": "3573:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3585:6:6",
														"nodeType": "YulTypedName",
														"src": "3585:6:6",
														"type": ""
													}
												],
												"src": "3518:345:6"
											},
											{
												"body": {
													"nativeSrc": "3965:73:6",
													"nodeType": "YulBlock",
													"src": "3965:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3982:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3982:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3987:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3987:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3975:6:6"
																},
																"nativeSrc": "3975:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3975:19:6"
															},
															"nativeSrc": "3975:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3975:19:6"
														},
														{
															"nativeSrc": "4003:29:6",
															"nodeType": "YulAssignment",
															"src": "4003:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4022:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4022:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4027:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4027:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4018:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4018:3:6"
																},
																"nativeSrc": "4018:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4018:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4003:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "4003:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3869:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3937:3:6",
														"nodeType": "YulTypedName",
														"src": "3937:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3942:6:6",
														"nodeType": "YulTypedName",
														"src": "3942:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3953:11:6",
														"nodeType": "YulTypedName",
														"src": "3953:11:6",
														"type": ""
													}
												],
												"src": "3869:169:6"
											},
											{
												"body": {
													"nativeSrc": "4150:61:6",
													"nodeType": "YulBlock",
													"src": "4150:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4172:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4172:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4180:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4180:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4168:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:6"
																		},
																		"nativeSrc": "4168:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:14:6"
																	},
																	{
																		"hexValue": "5769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4184:19:6",
																		"nodeType": "YulLiteral",
																		"src": "4184:19:6",
																		"type": "",
																		"value": "Withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4161:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4161:6:6"
																},
																"nativeSrc": "4161:43:6",
																"nodeType": "YulFunctionCall",
																"src": "4161:43:6"
															},
															"nativeSrc": "4161:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "4161:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
												"nativeSrc": "4044:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4142:6:6",
														"nodeType": "YulTypedName",
														"src": "4142:6:6",
														"type": ""
													}
												],
												"src": "4044:167:6"
											},
											{
												"body": {
													"nativeSrc": "4363:220:6",
													"nodeType": "YulBlock",
													"src": "4363:220:6",
													"statements": [
														{
															"nativeSrc": "4373:74:6",
															"nodeType": "YulAssignment",
															"src": "4373:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4439:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4439:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4444:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4444:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4380:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:58:6"
																},
																"nativeSrc": "4380:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4373:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4545:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4545:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																	"nativeSrc": "4456:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4456:88:6"
																},
																"nativeSrc": "4456:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4456:93:6"
															},
															"nativeSrc": "4456:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4456:93:6"
														},
														{
															"nativeSrc": "4558:19:6",
															"nodeType": "YulAssignment",
															"src": "4558:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4569:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4574:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4565:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4565:3:6"
																},
																"nativeSrc": "4565:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4565:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4558:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4217:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4351:3:6",
														"nodeType": "YulTypedName",
														"src": "4351:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4359:3:6",
														"nodeType": "YulTypedName",
														"src": "4359:3:6",
														"type": ""
													}
												],
												"src": "4217:366:6"
											},
											{
												"body": {
													"nativeSrc": "4760:248:6",
													"nodeType": "YulBlock",
													"src": "4760:248:6",
													"statements": [
														{
															"nativeSrc": "4770:26:6",
															"nodeType": "YulAssignment",
															"src": "4770:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4782:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4782:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4778:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:6"
																},
																"nativeSrc": "4778:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4778:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4770:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4770:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4817:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4828:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4828:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4813:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:6"
																		},
																		"nativeSrc": "4813:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4813:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4836:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4836:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4832:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:6"
																		},
																		"nativeSrc": "4832:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4806:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:6"
																},
																"nativeSrc": "4806:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4806:47:6"
															},
															"nativeSrc": "4806:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4806:47:6"
														},
														{
															"nativeSrc": "4862:139:6",
															"nodeType": "YulAssignment",
															"src": "4862:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4996:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4996:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4870:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4870:124:6"
																},
																"nativeSrc": "4870:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4870:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4862:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4862:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4589:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4740:9:6",
														"nodeType": "YulTypedName",
														"src": "4740:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4755:4:6",
														"nodeType": "YulTypedName",
														"src": "4755:4:6",
														"type": ""
													}
												],
												"src": "4589:419:6"
											},
											{
												"body": {
													"nativeSrc": "5042:152:6",
													"nodeType": "YulBlock",
													"src": "5042:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5059:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5059:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5062:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5062:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5052:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5052:6:6"
																},
																"nativeSrc": "5052:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5052:88:6"
															},
															"nativeSrc": "5052:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5052:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5156:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5156:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5159:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5159:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5149:6:6"
																},
																"nativeSrc": "5149:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5149:15:6"
															},
															"nativeSrc": "5149:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5149:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5180:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5180:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5183:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5183:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5173:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5173:6:6"
																},
																"nativeSrc": "5173:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5173:15:6"
															},
															"nativeSrc": "5173:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5173:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5014:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5014:180:6"
											},
											{
												"body": {
													"nativeSrc": "5263:80:6",
													"nodeType": "YulBlock",
													"src": "5263:80:6",
													"statements": [
														{
															"nativeSrc": "5273:22:6",
															"nodeType": "YulAssignment",
															"src": "5273:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5288:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5288:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5282:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5282:5:6"
																},
																"nativeSrc": "5282:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5282:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5273:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5273:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5331:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5331:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5304:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "5304:26:6"
																},
																"nativeSrc": "5304:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5304:33:6"
															},
															"nativeSrc": "5304:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5304:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5200:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5241:6:6",
														"nodeType": "YulTypedName",
														"src": "5241:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5249:3:6",
														"nodeType": "YulTypedName",
														"src": "5249:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5257:5:6",
														"nodeType": "YulTypedName",
														"src": "5257:5:6",
														"type": ""
													}
												],
												"src": "5200:143:6"
											},
											{
												"body": {
													"nativeSrc": "5426:274:6",
													"nodeType": "YulBlock",
													"src": "5426:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5472:83:6",
																"nodeType": "YulBlock",
																"src": "5472:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5474:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5474:77:6"
																			},
																			"nativeSrc": "5474:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5474:79:6"
																		},
																		"nativeSrc": "5474:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5474:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5447:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5447:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5456:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5456:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5443:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5443:3:6"
																		},
																		"nativeSrc": "5443:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5443:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5468:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5468:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5439:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5439:3:6"
																},
																"nativeSrc": "5439:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5439:32:6"
															},
															"nativeSrc": "5436:119:6",
															"nodeType": "YulIf",
															"src": "5436:119:6"
														},
														{
															"nativeSrc": "5565:128:6",
															"nodeType": "YulBlock",
															"src": "5565:128:6",
															"statements": [
																{
																	"nativeSrc": "5580:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5580:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5594:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5594:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5584:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5584:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5609:74:6",
																	"nodeType": "YulAssignment",
																	"src": "5609:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5655:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5655:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5666:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5666:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5651:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5651:3:6"
																				},
																				"nativeSrc": "5651:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5651:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5675:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5675:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5619:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "5619:31:6"
																		},
																		"nativeSrc": "5619:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5609:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5609:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5349:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5396:9:6",
														"nodeType": "YulTypedName",
														"src": "5396:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5407:7:6",
														"nodeType": "YulTypedName",
														"src": "5407:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5419:6:6",
														"nodeType": "YulTypedName",
														"src": "5419:6:6",
														"type": ""
													}
												],
												"src": "5349:351:6"
											},
											{
												"body": {
													"nativeSrc": "5764:40:6",
													"nodeType": "YulBlock",
													"src": "5764:40:6",
													"statements": [
														{
															"nativeSrc": "5775:22:6",
															"nodeType": "YulAssignment",
															"src": "5775:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5791:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5791:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5785:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5785:5:6"
																},
																"nativeSrc": "5785:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5785:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5775:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "5706:98:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5747:5:6",
														"nodeType": "YulTypedName",
														"src": "5747:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5757:6:6",
														"nodeType": "YulTypedName",
														"src": "5757:6:6",
														"type": ""
													}
												],
												"src": "5706:98:6"
											},
											{
												"body": {
													"nativeSrc": "5905:73:6",
													"nodeType": "YulBlock",
													"src": "5905:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5922:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5922:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5927:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5927:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5915:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																},
																"nativeSrc": "5915:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5915:19:6"
															},
															"nativeSrc": "5915:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "5915:19:6"
														},
														{
															"nativeSrc": "5943:29:6",
															"nodeType": "YulAssignment",
															"src": "5943:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5962:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5962:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5967:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5967:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5958:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:6"
																},
																"nativeSrc": "5958:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5958:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5943:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "5943:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "5810:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5877:3:6",
														"nodeType": "YulTypedName",
														"src": "5877:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5882:6:6",
														"nodeType": "YulTypedName",
														"src": "5882:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5893:11:6",
														"nodeType": "YulTypedName",
														"src": "5893:11:6",
														"type": ""
													}
												],
												"src": "5810:168:6"
											},
											{
												"body": {
													"nativeSrc": "6046:77:6",
													"nodeType": "YulBlock",
													"src": "6046:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6063:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6063:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6068:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6068:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6073:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6073:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6057:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6057:5:6"
																},
																"nativeSrc": "6057:23:6",
																"nodeType": "YulFunctionCall",
																"src": "6057:23:6"
															},
															"nativeSrc": "6057:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "6057:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6100:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6100:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6105:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6105:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6096:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6096:3:6"
																		},
																		"nativeSrc": "6096:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6096:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6114:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6114:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6089:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:6"
																},
																"nativeSrc": "6089:27:6",
																"nodeType": "YulFunctionCall",
																"src": "6089:27:6"
															},
															"nativeSrc": "6089:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "6089:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5984:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6028:3:6",
														"nodeType": "YulTypedName",
														"src": "6028:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6033:3:6",
														"nodeType": "YulTypedName",
														"src": "6033:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6038:6:6",
														"nodeType": "YulTypedName",
														"src": "6038:6:6",
														"type": ""
													}
												],
												"src": "5984:139:6"
											},
											{
												"body": {
													"nativeSrc": "6177:54:6",
													"nodeType": "YulBlock",
													"src": "6177:54:6",
													"statements": [
														{
															"nativeSrc": "6187:38:6",
															"nodeType": "YulAssignment",
															"src": "6187:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6205:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6205:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6212:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6212:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6201:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6201:3:6"
																		},
																		"nativeSrc": "6201:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6201:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6221:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6221:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6217:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6217:3:6"
																		},
																		"nativeSrc": "6217:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6217:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6197:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6197:3:6"
																},
																"nativeSrc": "6197:28:6",
																"nodeType": "YulFunctionCall",
																"src": "6197:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6129:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6160:5:6",
														"nodeType": "YulTypedName",
														"src": "6160:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6170:6:6",
														"nodeType": "YulTypedName",
														"src": "6170:6:6",
														"type": ""
													}
												],
												"src": "6129:102:6"
											},
											{
												"body": {
													"nativeSrc": "6327:283:6",
													"nodeType": "YulBlock",
													"src": "6327:283:6",
													"statements": [
														{
															"nativeSrc": "6337:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6337:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6383:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6383:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6351:31:6",
																	"nodeType": "YulIdentifier",
																	"src": "6351:31:6"
																},
																"nativeSrc": "6351:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6351:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6341:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6341:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6398:77:6",
															"nodeType": "YulAssignment",
															"src": "6398:77:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6463:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6463:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6468:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6468:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6405:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "6405:57:6"
																},
																"nativeSrc": "6405:70:6",
																"nodeType": "YulFunctionCall",
																"src": "6405:70:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6398:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6523:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6523:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6530:4:6",
																				"nodeType": "YulLiteral",
																				"src": "6530:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6519:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:6"
																		},
																		"nativeSrc": "6519:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6519:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6537:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6537:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6542:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6542:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6484:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "6484:34:6"
																},
																"nativeSrc": "6484:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6484:65:6"
															},
															"nativeSrc": "6484:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6484:65:6"
														},
														{
															"nativeSrc": "6558:46:6",
															"nodeType": "YulAssignment",
															"src": "6558:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6569:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6569:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6596:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6596:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6574:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "6574:21:6"
																		},
																		"nativeSrc": "6574:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6574:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6565:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6565:3:6"
																},
																"nativeSrc": "6565:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6565:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6558:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "6237:373:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6308:5:6",
														"nodeType": "YulTypedName",
														"src": "6308:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6315:3:6",
														"nodeType": "YulTypedName",
														"src": "6315:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6323:3:6",
														"nodeType": "YulTypedName",
														"src": "6323:3:6",
														"type": ""
													}
												],
												"src": "6237:373:6"
											},
											{
												"body": {
													"nativeSrc": "6816:440:6",
													"nodeType": "YulBlock",
													"src": "6816:440:6",
													"statements": [
														{
															"nativeSrc": "6826:27:6",
															"nodeType": "YulAssignment",
															"src": "6826:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6838:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6838:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6849:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6849:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6834:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6834:3:6"
																},
																"nativeSrc": "6834:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6834:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6826:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6907:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6907:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6920:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6920:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6931:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6931:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6916:3:6"
																		},
																		"nativeSrc": "6916:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6916:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6863:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6863:43:6"
																},
																"nativeSrc": "6863:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6863:71:6"
															},
															"nativeSrc": "6863:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6863:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6988:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6988:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7001:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7001:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7012:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7012:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6997:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6997:3:6"
																		},
																		"nativeSrc": "6997:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6997:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6944:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6944:43:6"
																},
																"nativeSrc": "6944:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6944:72:6"
															},
															"nativeSrc": "6944:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6944:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7070:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7070:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7083:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7083:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7094:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7094:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7079:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7079:3:6"
																		},
																		"nativeSrc": "7079:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7079:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7026:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7026:43:6"
																},
																"nativeSrc": "7026:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7026:72:6"
															},
															"nativeSrc": "7026:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7026:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7119:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7119:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7130:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7130:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7115:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7115:3:6"
																		},
																		"nativeSrc": "7115:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7115:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7139:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7139:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7145:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7145:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7135:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:6"
																		},
																		"nativeSrc": "7135:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7135:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7108:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7108:6:6"
																},
																"nativeSrc": "7108:48:6",
																"nodeType": "YulFunctionCall",
																"src": "7108:48:6"
															},
															"nativeSrc": "7108:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "7108:48:6"
														},
														{
															"nativeSrc": "7165:84:6",
															"nodeType": "YulAssignment",
															"src": "7165:84:6",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7235:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7235:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7244:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7244:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "7173:61:6",
																	"nodeType": "YulIdentifier",
																	"src": "7173:61:6"
																},
																"nativeSrc": "7173:76:6",
																"nodeType": "YulFunctionCall",
																"src": "7173:76:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7165:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7165:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6616:640:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6764:9:6",
														"nodeType": "YulTypedName",
														"src": "6764:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6776:6:6",
														"nodeType": "YulTypedName",
														"src": "6776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6784:6:6",
														"nodeType": "YulTypedName",
														"src": "6784:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6792:6:6",
														"nodeType": "YulTypedName",
														"src": "6792:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6800:6:6",
														"nodeType": "YulTypedName",
														"src": "6800:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6811:4:6",
														"nodeType": "YulTypedName",
														"src": "6811:4:6",
														"type": ""
													}
												],
												"src": "6616:640:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c80638da5cb5b116100645780638da5cb5b146101205780638f32d59b1461013e57806392eefe9b1461015c578063c1d2d00d14610178578063f2fde38b146101945761009c565b806304bb60ce146100a057806364679356146100be578063715018a6146100dc5780637c0b8de2146100e65780638cda7bb414610104575b5f80fd5b6100a86101b0565b6040516100b591906108c0565b60405180910390f35b6100c66101d5565b6040516100d391906108c0565b60405180910390f35b6100e46101fa565b005b6100ee6102ad565b6040516100fb91906108c0565b60405180910390f35b61011e6004803603810190610119919061093a565b6102d2565b005b61012861045e565b60405161013591906108c0565b60405180910390f35b610146610485565b6040516101539190610992565b60405180910390f35b610176600480360381019061017191906109ab565b6104da565b005b610192600480360381019061018d919061093a565b61052d565b005b6101ae60048036038101906101a991906109ab565b610773565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610202610485565b61020a575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610377575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61037f575f80fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016103db9291906109e5565b6020604051808303815f875af11580156103f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041b9190610a36565b61045a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045190610abb565b60405180910390fd5b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6104e2610485565b6104ea575f80fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105d2575060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105da575f80fd5b5f805f67ffffffffffffffff8111156105f6576105f5610ad9565b5b6040519080825280601f01601f1916602001820160405280156106285781602001600182028036833780820191505090505b5090505f5b8481101561076c5760055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5930836040518363ffffffff1660e01b81526004016106919291906109e5565b602060405180830381865afa1580156106ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106d09190610b1a565b925060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde308686866040518563ffffffff1660e01b81526004016107329493929190610bb5565b5f604051808303815f87803b158015610749575f80fd5b505af115801561075b573d5f803e3d5ffd5b50505050808060010191505061062d565b5050505050565b61077b610485565b610783575f80fd5b61078c8161078f565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c6575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108aa82610881565b9050919050565b6108ba816108a0565b82525050565b5f6020820190506108d35f8301846108b1565b92915050565b5f80fd5b5f819050919050565b6108ef816108dd565b81146108f9575f80fd5b50565b5f8135905061090a816108e6565b92915050565b610919816108a0565b8114610923575f80fd5b50565b5f8135905061093481610910565b92915050565b5f80604083850312156109505761094f6108d9565b5b5f61095d858286016108fc565b925050602061096e85828601610926565b9150509250929050565b5f8115159050919050565b61098c81610978565b82525050565b5f6020820190506109a55f830184610983565b92915050565b5f602082840312156109c0576109bf6108d9565b5b5f6109cd84828501610926565b91505092915050565b6109df816108dd565b82525050565b5f6040820190506109f85f8301856108b1565b610a0560208301846109d6565b9392505050565b610a1581610978565b8114610a1f575f80fd5b50565b5f81519050610a3081610a0c565b92915050565b5f60208284031215610a4b57610a4a6108d9565b5b5f610a5884828501610a22565b91505092915050565b5f82825260208201905092915050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f610aa5601183610a61565b9150610ab082610a71565b602082019050919050565b5f6020820190508181035f830152610ad281610a99565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050610b14816108e6565b92915050565b5f60208284031215610b2f57610b2e6108d9565b5b5f610b3c84828501610b06565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610b8782610b45565b610b918185610b4f565b9350610ba1818560208601610b5f565b610baa81610b6d565b840191505092915050565b5f608082019050610bc85f8301876108b1565b610bd560208301866108b1565b610be260408301856109d6565b8181036060830152610bf48184610b7d565b90509594505050505056fea264697066735822122031faec28b6ab4a5c0d65ce70c6515be6018c3dff5a7c2ba11a5805d347e3758664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xC1D2D00D EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x194 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x4BB60CE EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x64679356 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x7C0B8DE2 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8CDA7BB4 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x1FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x2D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x202 PUSH2 0x485 JUMP JUMPDEST PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x377 JUMPI POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x37F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DB SWAP3 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x451 SWAP1 PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x485 JUMP JUMPDEST PUSH2 0x4EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5D2 JUMPI POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F5 PUSH2 0xAD9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x628 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x76C JUMPI PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F745C59 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP3 SWAP2 SWAP1 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x62D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x77B PUSH2 0x485 JUMP JUMPDEST PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP2 PUSH2 0x78F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BA DUP2 PUSH2 0x8A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EF DUP2 PUSH2 0x8DD JUMP JUMPDEST DUP2 EQ PUSH2 0x8F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x90A DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x919 DUP2 PUSH2 0x8A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x923 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x934 DUP2 PUSH2 0x910 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x950 JUMPI PUSH2 0x94F PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x95D DUP6 DUP3 DUP7 ADD PUSH2 0x8FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x96E DUP6 DUP3 DUP7 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x978 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9BF PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CD DUP5 DUP3 DUP6 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DF DUP2 PUSH2 0x8DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9F8 PUSH0 DUP4 ADD DUP6 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0xA05 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA15 DUP2 PUSH2 0x978 JUMP JUMPDEST DUP2 EQ PUSH2 0xA1F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA30 DUP2 PUSH2 0xA0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA58 DUP5 DUP3 DUP6 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAA5 PUSH1 0x11 DUP4 PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB0 DUP3 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAD2 DUP2 PUSH2 0xA99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB14 DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3C DUP5 DUP3 DUP6 ADD PUSH2 0xB06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB87 DUP3 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB91 DUP2 DUP6 PUSH2 0xB4F JUMP JUMPDEST SWAP4 POP PUSH2 0xBA1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB5F JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xB6D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xBC8 PUSH0 DUP4 ADD DUP8 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0xBD5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0xBE2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9D6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xBF4 DUP2 DUP5 PUSH2 0xB7D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE STATICCALL 0xEC 0x28 0xB6 0xAB BLOBBASEFEE TLOAD 0xD PUSH6 0xCE70C6515BE6 ADD DUP13 RETURNDATASIZE SELFDESTRUCT GAS PUSH29 0x2BA11A5805D347E3758664736F6C634300081900330000000000000000 ",
							"sourceMap": "222:1113:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;518:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;722:126:2;;;:::i;:::-;;468:18:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;457:79:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1240::1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;880:352;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;856:109:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;493:18:1;;;;;;;;;;;;;:::o;518:25::-;;;;;;;;;;;;;:::o;722:126:2:-;584:9;:7;:9::i;:::-;576:18;;;;;;803:6:::1;::::0;::::1;;;;;;;;784:26;;;;;;;;;;;;838:1;821:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;722:126::o:0;468:18:1:-;;;;;;;;;;;;;:::o;721:151::-;658:6;;;;;;;;;;644:20;;:10;:20;;;:48;;;;682:10;;;;;;;;;;;668:24;;:10;:24;;;644:48;636:57;;;;;;815:4:::1;;;;;;;;;;;:13;;;829:4;835:6;815:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;807:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;721:151:::0;;:::o;457:79:2:-;495:7;522:6;;;;;;;;;;;515:13;;457:79;:::o;622:92::-;662:4;700:6;;;;;;;;;;;686:20;;:10;:20;;;679:27;;622:92;:::o;1240::1:-;584:9:2;:7;:9::i;:::-;576:18;;;;;;1320:4:1::1;1307:10;;:17;;;;;;;;;;;;;;;;;;1240:92:::0;:::o;880:352::-;658:6;;;;;;;;;;644:20;;:10;:20;;;:48;;;;682:10;;;;;;;;;;;668:24;;:10;:24;;;644:48;636:57;;;;;;966:15:::1;992:17:::0;1022:1:::1;1012:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;992:32;;1042:9;1037:188;1061:6;1057:1;:10;1037:188;;;1099:4;;;;;;;;;;;:24;;;1132:4;1139:1;1099:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1089:52;;1156:4;;;;;;;;;;;:21;;;1186:4;1193;1199:7;1208:4;1156:57;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1069:3;;;;;;;1037:188;;;;955:277;;880:352:::0;;:::o;856:109:2:-;584:9;:7;:9::i;:::-;576:18;;;;;;929:28:::1;948:8;929:18;:28::i;:::-;856:109:::0;:::o;973:187::-;1067:1;1047:22;;:8;:22;;;1039:31;;;;;;1115:8;1086:38;;1107:6;;;;;;;;;;1086:38;;;;;;;;;;;;1144:8;1135:6;;:17;;;;;;;;;;;;;;;;;;973:187;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:90::-;2063:7;2106:5;2099:13;2092:21;2081:32;;2029:90;;;:::o;2125:109::-;2206:21;2221:5;2206:21;:::i;:::-;2201:3;2194:34;2125:109;;:::o;2240:210::-;2327:4;2365:2;2354:9;2350:18;2342:26;;2378:65;2440:1;2429:9;2425:17;2416:6;2378:65;:::i;:::-;2240:210;;;;:::o;2456:329::-;2515:6;2564:2;2552:9;2543:7;2539:23;2535:32;2532:119;;;2570:79;;:::i;:::-;2532:119;2690:1;2715:53;2760:7;2751:6;2740:9;2736:22;2715:53;:::i;:::-;2705:63;;2661:117;2456:329;;;;:::o;2791:118::-;2878:24;2896:5;2878:24;:::i;:::-;2873:3;2866:37;2791:118;;:::o;2915:332::-;3036:4;3074:2;3063:9;3059:18;3051:26;;3087:71;3155:1;3144:9;3140:17;3131:6;3087:71;:::i;:::-;3168:72;3236:2;3225:9;3221:18;3212:6;3168:72;:::i;:::-;2915:332;;;;;:::o;3253:116::-;3323:21;3338:5;3323:21;:::i;:::-;3316:5;3313:32;3303:60;;3359:1;3356;3349:12;3303:60;3253:116;:::o;3375:137::-;3429:5;3460:6;3454:13;3445:22;;3476:30;3500:5;3476:30;:::i;:::-;3375:137;;;;:::o;3518:345::-;3585:6;3634:2;3622:9;3613:7;3609:23;3605:32;3602:119;;;3640:79;;:::i;:::-;3602:119;3760:1;3785:61;3838:7;3829:6;3818:9;3814:22;3785:61;:::i;:::-;3775:71;;3731:125;3518:345;;;;:::o;3869:169::-;3953:11;3987:6;3982:3;3975:19;4027:4;4022:3;4018:14;4003:29;;3869:169;;;;:::o;4044:167::-;4184:19;4180:1;4172:6;4168:14;4161:43;4044:167;:::o;4217:366::-;4359:3;4380:67;4444:2;4439:3;4380:67;:::i;:::-;4373:74;;4456:93;4545:3;4456:93;:::i;:::-;4574:2;4569:3;4565:12;4558:19;;4217:366;;;:::o;4589:419::-;4755:4;4793:2;4782:9;4778:18;4770:26;;4842:9;4836:4;4832:20;4828:1;4817:9;4813:17;4806:47;4870:131;4996:4;4870:131;:::i;:::-;4862:139;;4589:419;;;:::o;5014:180::-;5062:77;5059:1;5052:88;5159:4;5156:1;5149:15;5183:4;5180:1;5173:15;5200:143;5257:5;5288:6;5282:13;5273:22;;5304:33;5331:5;5304:33;:::i;:::-;5200:143;;;;:::o;5349:351::-;5419:6;5468:2;5456:9;5447:7;5443:23;5439:32;5436:119;;;5474:79;;:::i;:::-;5436:119;5594:1;5619:64;5675:7;5666:6;5655:9;5651:22;5619:64;:::i;:::-;5609:74;;5565:128;5349:351;;;;:::o;5706:98::-;5757:6;5791:5;5785:12;5775:22;;5706:98;;;:::o;5810:168::-;5893:11;5927:6;5922:3;5915:19;5967:4;5962:3;5958:14;5943:29;;5810:168;;;;:::o;5984:139::-;6073:6;6068:3;6063;6057:23;6114:1;6105:6;6100:3;6096:16;6089:27;5984:139;;;:::o;6129:102::-;6170:6;6221:2;6217:7;6212:2;6205:5;6201:14;6197:28;6187:38;;6129:102;;;:::o;6237:373::-;6323:3;6351:38;6383:5;6351:38;:::i;:::-;6405:70;6468:6;6463:3;6405:70;:::i;:::-;6398:77;;6484:65;6542:6;6537:3;6530:4;6523:5;6519:16;6484:65;:::i;:::-;6574:29;6596:6;6574:29;:::i;:::-;6569:3;6565:39;6558:46;;6327:283;6237:373;;;;:::o;6616:640::-;6811:4;6849:3;6838:9;6834:19;6826:27;;6863:71;6931:1;6920:9;6916:17;6907:6;6863:71;:::i;:::-;6944:72;7012:2;7001:9;6997:18;6988:6;6944:72;:::i;:::-;7026;7094:2;7083:9;7079:18;7070:6;7026:72;:::i;:::-;7145:9;7139:4;7135:20;7130:2;7119:9;7115:18;7108:48;7173:76;7244:4;7235:6;7173:76;:::i;:::-;7165:84;;6616:640;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "625000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Controller()": "2531",
								"FFT()": "2509",
								"NFT()": "2575",
								"isOwner()": "2512",
								"owner()": "2515",
								"renounceOwnership()": "29949",
								"setController(address)": "26962",
								"transferOwnership(address)": "30746",
								"withdrawFFT(uint256,address)": "infinite",
								"withdrawNFT(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 222,
									"end": 1335,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 460,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 305,
									"end": 460,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 305,
									"end": 460,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 305,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 305,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 431,
									"end": 441,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 422,
									"end": 428,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 428,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 360,
									"end": 363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 354,
									"end": 357,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 357,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 354,
									"end": 363,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 354,
									"end": 363,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 354,
									"end": 363,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 363,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 380,
									"end": 383,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 374,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 374,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 383,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 374,
									"end": 383,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 374,
									"end": 383,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 374,
									"end": 383,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 374,
									"end": 383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 409,
									"end": 412,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 400,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 396,
									"end": 400,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 396,
									"end": 413,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 451,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 424,
									"end": 428,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 424,
									"end": 428,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 424,
									"end": 452,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 424,
									"end": 452,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 424,
									"end": 452,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 1335,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031faec28b6ab4a5c0d65ce70c6515be6018c3dff5a7c2ba11a5805d347e3758664736f6c63430008190033",
									".code": [
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "8F32D59B"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "92EEFE9B"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "C1D2D00D"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "4BB60CE"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "64679356"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "7C0B8DE2"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "8CDA7BB4"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 1335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 493,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 493,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 518,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 518,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 722,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 486,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 468,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 468,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 721,
											"end": 872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 721,
											"end": 872,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 721,
											"end": 872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 721,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 721,
											"end": 872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 721,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 721,
											"end": 872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1240,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 880,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 880,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 493,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 493,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 518,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 486,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 721,
											"end": 872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 644,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 644,
											"end": 654,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 644,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 644,
											"end": 664,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 644,
											"end": 692,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 668,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 678,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 668,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 668,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 644,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 636,
											"end": 693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 636,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 815,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 815,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 829,
											"end": 833,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 841,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 815,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 815,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 815,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 807,
											"end": 864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 807,
											"end": 864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 515,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 662,
											"end": 666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 679,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 679,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 584,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1307,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1324,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 644,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 644,
											"end": 654,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 644,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 644,
											"end": 664,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 644,
											"end": 692,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 682,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 668,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 678,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 668,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 668,
											"end": 692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 644,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 644,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 636,
											"end": 693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 636,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 636,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 966,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1012,
											"end": 1024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1067,
											"modifierDepth": 1,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1103,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2F745C59"
										},
										{
											"begin": 1132,
											"end": 1136,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1140,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1099,
											"end": 1141,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1099,
											"end": 1141,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1099,
											"end": 1141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1177,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 1186,
											"end": 1190,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1206,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1212,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1156,
											"end": 1213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1069,
											"end": 1072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 1232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 948,
											"end": 956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 929,
											"end": 947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 929,
											"end": 957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 920,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 975,
											"end": 991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 975,
											"end": 991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 920,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2119,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2029,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2112,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2113,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2234,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2125,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2206,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2206,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2240,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2378,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2450,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2450,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2562,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2567,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2570,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2570,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2532,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2715,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2878,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3137,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3087,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3236,
											"end": 3238,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3168,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3369,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3253,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3338,
											"end": 3343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3323,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3323,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3345,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3303,
											"end": 3363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3303,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3375,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3500,
											"end": 3505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3476,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3506,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3476,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3863,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3518,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3632,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3637,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 3721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3602,
											"end": 3721,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3640,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3640,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3719,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3640,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 3721,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3602,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3827,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3785,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3846,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3785,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 3856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3863,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4038,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3869,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3953,
											"end": 3964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4038,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 4038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4211,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4044,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "5769746864726177616C206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 4180,
											"end": 4181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4583,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4217,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4444,
											"end": 4446,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4439,
											"end": 4442,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4380,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4447,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4380,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4545,
											"end": 4548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4456,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4549,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4456,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4569,
											"end": 4572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 5008,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4589,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4795,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4782,
											"end": 4791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4817,
											"end": 4826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4996,
											"end": 5000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4870,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5001,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4870,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 5001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 5001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 5008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 5008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 5008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5194,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5014,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5062,
											"end": 5139,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5059,
											"end": 5060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5180,
											"end": 5181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5188,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5343,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5200,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5257,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5295,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5331,
											"end": 5336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5304,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5337,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5304,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5700,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5349,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5470,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5454,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5466,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5471,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5555,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 5436,
											"end": 5555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5474,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5474,
											"end": 5553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5553,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5474,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5555,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 5436,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5675,
											"end": 5682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5619,
											"end": 5683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5683,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5619,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5565,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5700,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5804,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5706,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 5763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5785,
											"end": 5797,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5978,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5810,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5971,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5978,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6123,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5984,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6057,
											"end": 6080,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6111,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6231,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6129,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6223,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6205,
											"end": 6210,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6225,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6610,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6237,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6383,
											"end": 6388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6351,
											"end": 6389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6389,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6351,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6468,
											"end": 6474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6466,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6405,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6475,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6405,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6398,
											"end": 6475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6537,
											"end": 6540,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6523,
											"end": 6528,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6519,
											"end": 6535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6484,
											"end": 6549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6549,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6484,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6574,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6603,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6574,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6327,
											"end": 6610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6610,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6852,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6838,
											"end": 6847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 6853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 6853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6931,
											"end": 6932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6929,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 6933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6907,
											"end": 6913,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6863,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6934,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6863,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7001,
											"end": 7010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6997,
											"end": 7015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 6994,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6944,
											"end": 7016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 7016,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6944,
											"end": 7016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 7094,
											"end": 7096,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7092,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7070,
											"end": 7076,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7026,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7098,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 7026,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7155,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7130,
											"end": 7132,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7119,
											"end": 7128,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7244,
											"end": 7248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7241,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7173,
											"end": 7249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7173,
											"end": 7249,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7173,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 7256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/HotswapBase.sol",
								"contracts/HotswapLiquidity.sol",
								"contracts/Ownable.sol",
								"contracts/interfaces/ERC20.sol",
								"contracts/interfaces/ERC721.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Controller()": "64679356",
							"FFT()": "04bb60ce",
							"NFT()": "7c0b8de2",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setController(address)": "92eefe9b",
							"transferOwnership(address)": "f2fde38b",
							"withdrawFFT(uint256,address)": "8cda7bb4",
							"withdrawNFT(uint256,address)": "c1d2d00d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetAddr\",\"type\":\"address\"}],\"name\":\"NativeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"withdrawFFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HotswapLiquidity.sol\":\"HotswapLiquidity\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HotswapBase.sol\":{\"keccak256\":\"0xb1866c84555b6478150519b392424a2e3894928271a1b3a646f43ec16dea457b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc050056d240a7b206570b4a46d566b2fda43b806b9dcfd88dc201b2e28f7309\",\"dweb:/ipfs/QmURa775XgAbvhHYhm74BTtUiLtFhUiVRBSsWcoUTTCzet\"]},\"contracts/HotswapLiquidity.sol\":{\"keccak256\":\"0xa3431d0b36a5e75e919f170a35112b7573cbf972a43acc23e162569ac203815f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2a6d1bea28a68837c8ea7845c1452f77556128c8bed7d3f1602cbe1181e2611\",\"dweb:/ipfs/QmbncmKAr34YeDoZHuYtPRRtZd4MVWDX6oeVBCXqSYcqkn\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xe4bdf9813088baf13e1dc03d01cc80ee75ce663b510eb9a3f3967ef86b91465a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a346ee898e1223e7e4ade4c86c042c2e72f6d86c8cf012a849e99c12a0a6c0b\",\"dweb:/ipfs/QmRro6cqdDLWmwrsgZt1QrsCYayQ5XTHpzaQfxvhiRt49v\"]},\"contracts/interfaces/ERC20.sol\":{\"keccak256\":\"0x439b8f5b8161594b2bce53c7d379e42b80d3f5a0e077f76ad8bcdd7d3adfe62f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d62dc3966f3915b4f6bdf63afb4129996333f7c81cd0a86dfd6ee508a0575a2\",\"dweb:/ipfs/QmWrzDv5tPPUEDxx213aU12K6Q4U6DgSJmZUK5XyDJb33x\"]},\"contracts/interfaces/ERC721.sol\":{\"keccak256\":\"0xa3b05eb896187826556877b9d9cafc1f0445a4d448de04a5f14086ebc246b6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc0caaa0580d16fd428960403769daba5c9d5e81dbb5c92c3e5fb9a1de9e2be\",\"dweb:/ipfs/QmS1q7LQxvu8ntoZffNBQiefkTfHb9B5163M69kVNK7TkZ\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xe86ddaa1e6a3adddc657491ddd3af9270945ba0e5f314a6858a38c4cce9ac380\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1460f24d454db681ed6722468aa121e2db7995d9c7677d7a8abc70e1041662\",\"dweb:/ipfs/QmZsevnAKHRyYWe1VST3B7xkTV9bSkUgB3tmyEPgPbHMTv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 203,
								"contract": "contracts/HotswapLiquidity.sol:HotswapLiquidity",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 78,
								"contract": "contracts/HotswapLiquidity.sol:HotswapLiquidity",
								"label": "NFT",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 80,
								"contract": "contracts/HotswapLiquidity.sol:HotswapLiquidity",
								"label": "FFT",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 82,
								"contract": "contracts/HotswapLiquidity.sol:HotswapLiquidity",
								"label": "Controller",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 85,
								"contract": "contracts/HotswapLiquidity.sol:HotswapLiquidity",
								"label": "_fft",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ERC20)372"
							},
							{
								"astId": 88,
								"contract": "contracts/HotswapLiquidity.sol:HotswapLiquidity",
								"label": "_nft",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(ERC721Enumerable)452"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)372": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ERC721Enumerable)452": {
								"encoding": "inplace",
								"label": "contract ERC721Enumerable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"IOwnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xe4bdf9813088baf13e1dc03d01cc80ee75ce663b510eb9a3f3967ef86b91465a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a346ee898e1223e7e4ade4c86c042c2e72f6d86c8cf012a849e99c12a0a6c0b\",\"dweb:/ipfs/QmRro6cqdDLWmwrsgZt1QrsCYayQ5XTHpzaQfxvhiRt49v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":148:1163  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":397:449  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":431:441  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":422:428  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":422:441  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":148:1163  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":148:1163  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      tag_22\n        /* \"contracts/Ownable.sol\":584:591  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Ownable.sol\":576:594  require(isOwner()) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":803:809  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":784:810  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":838:839  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":821:827  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":821:840  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":722:848  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Ownable.sol\":495:502  address */\n      0x00\n        /* \"contracts/Ownable.sol\":522:528  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":515:528  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":457:536  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Ownable.sol\":662:666  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":700:706  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":686:706  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":686:696  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":686:706  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":679:706  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":622:714  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      tag_28\n        /* \"contracts/Ownable.sol\":584:591  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":584:593  isOwner() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Ownable.sol\":576:594  require(isOwner()) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Ownable.sol\":929:957  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/Ownable.sol\":948:956  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":929:947  _transferOwnership */\n      tag_32\n        /* \"contracts/Ownable.sol\":929:957  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownable.sol\":856:965  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":973:1160  function _transferOwnership(address newOwner) internal {... */\n    tag_32:\n        /* \"contracts/Ownable.sol\":1067:1068  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1047:1069  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1047:1055  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1047:1069  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":1039:1070  require(newOwner != address(0)) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/Ownable.sol\":1115:1123  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1086:1124  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1107:1113  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1086:1124  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1144:1152  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1135:1141  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":1135:1152  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":973:1160  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_38:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_39:\n        /* \"#utility.yul\":770:791   */\n      tag_55\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_16:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_57\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_41:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_43:\n        /* \"#utility.yul\":1420:1444   */\n      tag_62\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      dup1\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_63:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_44:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_65\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_19:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_68\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1696:1815   */\n    tag_67:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_69\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122077874e9f283fcdf8af3cc03777fea8da105ecf5973f8f4db1dbe9cea19c44e9064736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104078061005b5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea264697066735822122077874e9f283fcdf8af3cc03777fea8da105ecf5973f8f4db1dbe9cea19c44e9064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x407 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x874E9F283FCDF8AF3CC03777FEA8DA105ECF5973F8F4DB1D 0xBE SWAP13 0xEA NOT 0xC4 0x4E SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "148:1015:2:-:0;;;397:52;;;;;;;;;;431:10;422:6;;:19;;;;;;;;;;;;;;;;;;148:1015;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_303": {
									"entryPoint": 507,
									"id": 303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_250": {
									"entryPoint": 394,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_230": {
									"entryPoint": 355,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_267": {
									"entryPoint": 176,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_279": {
									"entryPoint": 479,
									"id": 279,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1952:6",
										"nodeType": "YulBlock",
										"src": "0:1952:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "463:124:6",
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nativeSrc": "473:26:6",
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:6",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:18:6",
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:6",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nativeSrc": "562:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nativeSrc": "509:71:6",
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nativeSrc": "509:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:6",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:6",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:6",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nativeSrc": "635:48:6",
													"nodeType": "YulBlock",
													"src": "635:48:6",
													"statements": [
														{
															"nativeSrc": "645:32:6",
															"nodeType": "YulAssignment",
															"src": "645:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:6"
																		},
																		"nativeSrc": "663:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:6"
																},
																"nativeSrc": "656:21:6",
																"nodeType": "YulFunctionCall",
																"src": "656:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:6",
														"nodeType": "YulTypedName",
														"src": "617:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:6",
														"nodeType": "YulTypedName",
														"src": "627:7:6",
														"type": ""
													}
												],
												"src": "593:90:6"
											},
											{
												"body": {
													"nativeSrc": "748:50:6",
													"nodeType": "YulBlock",
													"src": "748:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:6"
																		},
																		"nativeSrc": "770:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:6"
																},
																"nativeSrc": "758:34:6",
																"nodeType": "YulFunctionCall",
																"src": "758:34:6"
															},
															"nativeSrc": "758:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:6",
														"nodeType": "YulTypedName",
														"src": "736:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:6",
														"nodeType": "YulTypedName",
														"src": "743:3:6",
														"type": ""
													}
												],
												"src": "689:109:6"
											},
											{
												"body": {
													"nativeSrc": "896:118:6",
													"nodeType": "YulBlock",
													"src": "896:118:6",
													"statements": [
														{
															"nativeSrc": "906:26:6",
															"nodeType": "YulAssignment",
															"src": "906:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:6",
																		"nodeType": "YulLiteral",
																		"src": "929:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:6"
																},
																"nativeSrc": "914:18:6",
																"nodeType": "YulFunctionCall",
																"src": "914:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:6"
																		},
																		"nativeSrc": "989:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:6"
																},
																"nativeSrc": "942:65:6",
																"nodeType": "YulFunctionCall",
																"src": "942:65:6"
															},
															"nativeSrc": "942:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:6",
														"nodeType": "YulTypedName",
														"src": "868:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:6",
														"nodeType": "YulTypedName",
														"src": "880:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:6",
														"nodeType": "YulTypedName",
														"src": "891:4:6",
														"type": ""
													}
												],
												"src": "804:210:6"
											},
											{
												"body": {
													"nativeSrc": "1060:35:6",
													"nodeType": "YulBlock",
													"src": "1060:35:6",
													"statements": [
														{
															"nativeSrc": "1070:19:6",
															"nodeType": "YulAssignment",
															"src": "1070:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:6"
																},
																"nativeSrc": "1080:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:6",
														"nodeType": "YulTypedName",
														"src": "1053:6:6",
														"type": ""
													}
												],
												"src": "1020:75:6"
											},
											{
												"body": {
													"nativeSrc": "1190:28:6",
													"nodeType": "YulBlock",
													"src": "1190:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:6"
																},
																"nativeSrc": "1200:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:6"
															},
															"nativeSrc": "1200:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:6"
											},
											{
												"body": {
													"nativeSrc": "1313:28:6",
													"nodeType": "YulBlock",
													"src": "1313:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:6"
																},
																"nativeSrc": "1323:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:6"
															},
															"nativeSrc": "1323:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:6"
											},
											{
												"body": {
													"nativeSrc": "1390:79:6",
													"nodeType": "YulBlock",
													"src": "1390:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:6",
																"nodeType": "YulBlock",
																"src": "1447:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:6"
																			},
																			"nativeSrc": "1449:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:6"
																		},
																		"nativeSrc": "1449:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:6"
																				},
																				"nativeSrc": "1420:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:6"
																		},
																		"nativeSrc": "1410:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:6"
																},
																"nativeSrc": "1403:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:6"
															},
															"nativeSrc": "1400:63:6",
															"nodeType": "YulIf",
															"src": "1400:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:6",
														"nodeType": "YulTypedName",
														"src": "1383:5:6",
														"type": ""
													}
												],
												"src": "1347:122:6"
											},
											{
												"body": {
													"nativeSrc": "1527:87:6",
													"nodeType": "YulBlock",
													"src": "1527:87:6",
													"statements": [
														{
															"nativeSrc": "1537:29:6",
															"nodeType": "YulAssignment",
															"src": "1537:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:6"
																},
																"nativeSrc": "1546:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:6"
																},
																"nativeSrc": "1575:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:6"
															},
															"nativeSrc": "1575:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:6",
														"nodeType": "YulTypedName",
														"src": "1505:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:6",
														"nodeType": "YulTypedName",
														"src": "1513:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:6",
														"nodeType": "YulTypedName",
														"src": "1521:5:6",
														"type": ""
													}
												],
												"src": "1475:139:6"
											},
											{
												"body": {
													"nativeSrc": "1686:263:6",
													"nodeType": "YulBlock",
													"src": "1686:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:6",
																"nodeType": "YulBlock",
																"src": "1732:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:6"
																			},
																			"nativeSrc": "1734:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:6"
																		},
																		"nativeSrc": "1734:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:6"
																		},
																		"nativeSrc": "1703:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:6"
																},
																"nativeSrc": "1699:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:6"
															},
															"nativeSrc": "1696:119:6",
															"nodeType": "YulIf",
															"src": "1696:119:6"
														},
														{
															"nativeSrc": "1825:117:6",
															"nodeType": "YulBlock",
															"src": "1825:117:6",
															"statements": [
																{
																	"nativeSrc": "1840:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:6"
																				},
																				"nativeSrc": "1900:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:6"
																		},
																		"nativeSrc": "1879:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:6",
														"nodeType": "YulTypedName",
														"src": "1656:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:6",
														"nodeType": "YulTypedName",
														"src": "1667:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:6",
														"nodeType": "YulTypedName",
														"src": "1679:6:6",
														"type": ""
													}
												],
												"src": "1620:329:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea264697066735822122077874e9f283fcdf8af3cc03777fea8da105ecf5973f8f4db1dbe9cea19c44e9064736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x874E9F283FCDF8AF3CC03777FEA8DA105ECF5973F8F4DB1D 0xBE SWAP13 0xEA NOT 0xC4 0x4E SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "148:1015:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:126;;;:::i;:::-;;457:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;722:126;584:9;:7;:9::i;:::-;576:18;;;;;;803:6:::1;::::0;::::1;;;;;;;;784:26;;;;;;;;;;;;838:1;821:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;722:126::o:0;457:79::-;495:7;522:6;;;;;;;;;;;515:13;;457:79;:::o;622:92::-;662:4;700:6;;;;;;;;;;;686:20;;:10;:20;;;679:27;;622:92;:::o;856:109::-;584:9;:7;:9::i;:::-;576:18;;;;;;929:28:::1;948:8;929:18;:28::i;:::-;856:109:::0;:::o;973:187::-;1067:1;1047:22;;:8;:22;;;1039:31;;;;;;1115:8;1086:38;;1107:6;;;;;;;;;;1086:38;;;;;;;;;;;;1144:8;1135:6;;:17;;;;;;;;;;;;;;;;;;973:187;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206200",
								"executionCost": "24514",
								"totalCost": "230714"
							},
							"external": {
								"isOwner()": "2512",
								"owner()": "2515",
								"renounceOwnership()": "29882",
								"transferOwnership(address)": "30702"
							},
							"internal": {
								"_transferOwnership(address)": "27997"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 1163,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 397,
									"end": 449,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 449,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 397,
									"end": 449,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 397,
									"end": 449,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 431,
									"end": 441,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 422,
									"end": 428,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 428,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 441,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 422,
									"end": 441,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1163,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122077874e9f283fcdf8af3cc03777fea8da105ecf5973f8f4db1dbe9cea19c44e9064736f6c63430008190033",
									".code": [
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "8F32D59B"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 1163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 722,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 722,
											"end": 848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 584,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 803,
											"end": 809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 522,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 515,
											"end": 528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 457,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 622,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 662,
											"end": 666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 696,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 706,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 679,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 679,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 584,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 576,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 948,
											"end": 956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 929,
											"end": 947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 929,
											"end": 957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 929,
											"end": 957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1039,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1123,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1124,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/HotswapBase.sol",
								"contracts/HotswapLiquidity.sol",
								"contracts/Ownable.sol",
								"contracts/interfaces/ERC20.sol",
								"contracts/interfaces/ERC721.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xe4bdf9813088baf13e1dc03d01cc80ee75ce663b510eb9a3f3967ef86b91465a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a346ee898e1223e7e4ade4c86c042c2e72f6d86c8cf012a849e99c12a0a6c0b\",\"dweb:/ipfs/QmRro6cqdDLWmwrsgZt1QrsCYayQ5XTHpzaQfxvhiRt49v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 203,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ERC20.sol\":{\"keccak256\":\"0x439b8f5b8161594b2bce53c7d379e42b80d3f5a0e077f76ad8bcdd7d3adfe62f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d62dc3966f3915b4f6bdf63afb4129996333f7c81cd0a86dfd6ee508a0575a2\",\"dweb:/ipfs/QmWrzDv5tPPUEDxx213aU12K6Q4U6DgSJmZUK5XyDJb33x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.",
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ERC721.sol\":{\"keccak256\":\"0xa3b05eb896187826556877b9d9cafc1f0445a4d448de04a5f14086ebc246b6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc0caaa0580d16fd428960403769daba5c9d5e81dbb5c92c3e5fb9a1de9e2be\",\"dweb:/ipfs/QmS1q7LQxvu8ntoZffNBQiefkTfHb9B5163M69kVNK7TkZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				},
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x780e9d63.",
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"tokenByIndex(uint256)": {
								"details": "Throws if `_index` >= `totalSupply()`.",
								"params": {
									"_index": "A counter less than `totalSupply()`"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT,  (sort order not specified)"
								}
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.",
								"params": {
									"_index": "A counter less than `balanceOf(_owner)`",
									"_owner": "An address where we are interested in NFTs owned by them"
								},
								"returns": {
									"_0": "The token identifier for the `_index`th NFT assigned to `_owner`,   (sort order not specified)"
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x780e9d63.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT assigned to `_owner`,   (sort order not specified)\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ERC721.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ERC721.sol\":{\"keccak256\":\"0xa3b05eb896187826556877b9d9cafc1f0445a4d448de04a5f14086ebc246b6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc0caaa0580d16fd428960403769daba5c9d5e81dbb5c92c3e5fb9a1de9e2be\",\"dweb:/ipfs/QmS1q7LQxvu8ntoZffNBQiefkTfHb9B5163M69kVNK7TkZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"tokenByIndex(uint256)": {
								"notice": "Enumerate valid NFTs"
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"notice": "Enumerate NFTs assigned to an owner"
							},
							"totalSupply()": {
								"notice": "Count NFTs tracked by this contract"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":61:6698  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":61:6698  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220307797a94aef5a844c97e7328df2aabe69c3ba19835c7ae33a0cbae50819013864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220307797a94aef5a844c97e7328df2aabe69c3ba19835c7ae33a0cbae50819013864736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH24 0x97A94AEF5A844C97E7328DF2AABE69C3BA19835C7AE33A0C 0xBA 0xE5 ADDMOD NOT ADD CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "61:6637:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220307797a94aef5a844c97e7328df2aabe69c3ba19835c7ae33a0cbae50819013864736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH24 0x97A94AEF5A844C97E7328DF2AABE69C3BA19835C7AE33A0C 0xBA 0xE5 ADDMOD NOT ADD CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "61:6637:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 61,
									"end": 6698,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220307797a94aef5a844c97e7328df2aabe69c3ba19835c7ae33a0cbae50819013864736f6c63430008190033",
									".code": [
										{
											"begin": 61,
											"end": 6698,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 61,
											"end": 6698,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/HotswapBase.sol",
								"contracts/HotswapLiquidity.sol",
								"contracts/Ownable.sol",
								"contracts/interfaces/ERC20.sol",
								"contracts/interfaces/ERC721.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xe86ddaa1e6a3adddc657491ddd3af9270945ba0e5f314a6858a38c4cce9ac380\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1460f24d454db681ed6722468aa121e2db7995d9c7677d7a8abc70e1041662\",\"dweb:/ipfs/QmZsevnAKHRyYWe1VST3B7xkTV9bSkUgB3tmyEPgPbHMTv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/HotswapBase.sol": {
				"ast": {
					"absolutePath": "contracts/HotswapBase.sol",
					"exportedSymbols": {
						"HotswapBase": [
							36
						],
						"IOwnable": [
							199
						],
						"Ownable": [
							304
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 37,
							"sourceUnit": 305,
							"src": "61:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nameLocations": [
											"112:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 304,
										"src": "112:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "112:7:0"
								}
							],
							"canonicalName": "HotswapBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36,
								304,
								199
							],
							"name": "HotswapBase",
							"nameLocation": "97:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "237:151:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 15,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 13,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "252:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "255:4:0",
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "252:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "252:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 25,
												"nodeType": "IfStatement",
												"src": "248:108:0",
												"trueBody": {
													"id": 24,
													"nodeType": "Block",
													"src": "269:87:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 18,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "307:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 19,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "315:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 17,
																	"name": "NativeTransferred",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "289:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "289:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 21,
															"nodeType": "EmitStatement",
															"src": "284:34:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "340:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 12,
															"id": 23,
															"nodeType": "Return",
															"src": "333:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "375:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 12,
												"id": 27,
												"nodeType": "Return",
												"src": "368:12:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNative",
									"nameLocation": "136:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "178:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "162:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "162:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "199:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "191:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:61:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "231:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "230:6:0"
									},
									"scope": 36,
									"src": "127:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "40931b71492b849d0a8a8bba5c41cd51ebc924b03c90f1a5ee6f0f0a7851a1a5",
									"id": 35,
									"name": "NativeTransferred",
									"nameLocation": "402:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "428:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "420:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "targetAddr",
												"nameLocation": "444:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "436:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:36:0"
									},
									"src": "396:60:0"
								}
							],
							"scope": 37,
							"src": "88:371:0",
							"usedErrors": [],
							"usedEvents": [
								35,
								207,
								213
							]
						}
					],
					"src": "33:428:0"
				},
				"id": 0
			},
			"contracts/HotswapLiquidity.sol": {
				"ast": {
					"absolutePath": "contracts/HotswapLiquidity.sol",
					"exportedSymbols": {
						"ERC20": [
							372
						],
						"ERC721": [
							424
						],
						"ERC721Enumerable": [
							452
						],
						"HotswapBase": [
							36
						],
						"HotswapLiquidity": [
							191
						],
						"IOwnable": [
							199
						],
						"Ownable": [
							304
						],
						"SafeMath": [
							763
						]
					},
					"id": 192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 38,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 39,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 305,
							"src": "61:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 40,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 764,
							"src": "86:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ERC20.sol",
							"file": "./interfaces/ERC20.sol",
							"id": 41,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 373,
							"src": "122:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ERC721.sol",
							"file": "./interfaces/ERC721.sol",
							"id": 42,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 453,
							"src": "156:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/HotswapBase.sol",
							"file": "./HotswapBase.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 37,
							"src": "191:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 44,
										"name": "HotswapBase",
										"nameLocations": [
											"251:11:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 36,
										"src": "251:11:1"
									},
									"id": 45,
									"nodeType": "InheritanceSpecifier",
									"src": "251:11:1"
								}
							],
							"canonicalName": "HotswapLiquidity",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								36,
								304,
								199
							],
							"name": "HotswapLiquidity",
							"nameLocation": "231:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 48,
									"libraryName": {
										"id": 46,
										"name": "SafeMath",
										"nameLocations": [
											"276:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "276:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "270:27:1",
									"typeName": {
										"id": 47,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "343:117:1",
										"statements": [
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "NFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "354:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 56,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "360:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "354:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "354:9:1"
											},
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "FFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "374:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 60,
														"name": "fft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "380:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "374:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "374:9:1"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "_fft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "396:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$372",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 65,
																"name": "fft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "409:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 64,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "403:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$372_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "403:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$372",
															"typeString": "contract ERC20"
														}
													},
													"src": "396:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$372",
														"typeString": "contract ERC20"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "396:17:1"
											},
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 69,
														"name": "_nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "424:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721Enumerable_$452",
															"typeString": "contract ERC721Enumerable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 71,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "448:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 70,
															"name": "ERC721Enumerable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "431:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$452_$",
																"typeString": "type(contract ERC721Enumerable)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "431:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721Enumerable_$452",
															"typeString": "contract ERC721Enumerable"
														}
													},
													"src": "424:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721Enumerable_$452",
														"typeString": "contract ERC721Enumerable"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "424:28:1"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "325:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "317:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "fft",
												"nameLocation": "338:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "330:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:26:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:0:1"
									},
									"scope": 191,
									"src": "305:155:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7c0b8de2",
									"id": 78,
									"mutability": "mutable",
									"name": "NFT",
									"nameLocation": "483:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "468:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 77,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "468:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "04bb60ce",
									"id": 80,
									"mutability": "mutable",
									"name": "FFT",
									"nameLocation": "508:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "493:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 79,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64679356",
									"id": 82,
									"mutability": "mutable",
									"name": "Controller",
									"nameLocation": "533:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "518:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "_fft",
									"nameLocation": "558:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "552:10:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$372",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 84,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 83,
											"name": "ERC20",
											"nameLocations": [
												"552:5:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 372,
											"src": "552:5:1"
										},
										"referencedDeclaration": 372,
										"src": "552:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$372",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "_nft",
									"nameLocation": "586:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 191,
									"src": "569:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC721Enumerable_$452",
										"typeString": "contract ERC721Enumerable"
									},
									"typeName": {
										"id": 87,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 86,
											"name": "ERC721Enumerable",
											"nameLocations": [
												"569:16:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 452,
											"src": "569:16:1"
										},
										"referencedDeclaration": 452,
										"src": "569:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC721Enumerable_$452",
											"typeString": "contract ERC721Enumerable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "625:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 91,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "644:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "648:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "644:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 93,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "658:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "644:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 95,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "668:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "672:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "668:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 97,
																	"name": "Controller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "682:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "668:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "644:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "636:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "636:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "636:57:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "704:1:1"
											}
										]
									},
									"id": 104,
									"name": "onlyAuthorized",
									"nameLocation": "608:14:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:1"
									},
									"src": "599:114:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "796:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 116,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "829:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 117,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "835:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 114,
																	"name": "_fft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "815:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$372",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "820:8:1",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 342,
																"src": "815:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "815:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c206661696c6564",
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															},
															"value": "Withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "807:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "807:57:1"
											}
										]
									},
									"functionSelector": "8cda7bb4",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 110,
												"name": "onlyAuthorized",
												"nameLocations": [
													"781:14:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "781:14:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "781:14:1"
										}
									],
									"name": "withdrawFFT",
									"nameLocation": "730:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "750:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "742:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "766:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "758:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:30:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:1"
									},
									"scope": 191,
									"src": "721:151:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "955:277:1",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "974:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 177,
														"src": "966:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "966:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 134,
												"nodeType": "VariableDeclarationStatement",
												"src": "966:15:1"
											},
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1005:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 177,
														"src": "992:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 135,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "992:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1022:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1012:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 137,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1016:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "992:32:1"
											},
											{
												"body": {
													"id": 175,
													"nodeType": "Block",
													"src": "1074:151:1",
													"statements": [
														{
															"expression": {
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 152,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1089:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 157,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1132:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_HotswapLiquidity_$191",
																						"typeString": "contract HotswapLiquidity"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_HotswapLiquidity_$191",
																						"typeString": "contract HotswapLiquidity"
																					}
																				],
																				"id": 156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1124:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1124:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1124:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 159,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "1139:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 153,
																			"name": "_nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 88,
																			"src": "1099:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC721Enumerable_$452",
																				"typeString": "contract ERC721Enumerable"
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1104:19:1",
																		"memberName": "tokenOfOwnerByIndex",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 451,
																		"src": "1099:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view external returns (uint256)"
																		}
																	},
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1099:42:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1089:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 162,
															"nodeType": "ExpressionStatement",
															"src": "1089:52:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 168,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1186:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_HotswapLiquidity_$191",
																					"typeString": "contract HotswapLiquidity"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_HotswapLiquidity_$191",
																					"typeString": "contract HotswapLiquidity"
																				}
																			],
																			"id": 167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1178:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 166,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1178:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1178:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 170,
																		"name": "dest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "1193:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 171,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 133,
																		"src": "1199:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 172,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "1208:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 163,
																		"name": "_nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "1156:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC721Enumerable_$452",
																			"typeString": "contract ERC721Enumerable"
																		}
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1161:16:1",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 403,
																	"src": "1156:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) payable external"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1156:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "1156:57:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1057:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 147,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1061:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1057:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 176,
												"initializationExpression": {
													"assignments": [
														143
													],
													"declarations": [
														{
															"constant": false,
															"id": 143,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1050:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 176,
															"src": "1042:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 142,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1042:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 145,
													"initialValue": {
														"hexValue": "30",
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1054:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1042:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1069:3:1",
														"subExpression": {
															"id": 149,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1069:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 151,
													"nodeType": "ExpressionStatement",
													"src": "1069:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1037:188:1"
											}
										]
									},
									"functionSelector": "c1d2d00d",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 130,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 129,
												"name": "onlyAuthorized",
												"nameLocations": [
													"940:14:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "940:14:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "940:14:1"
										}
									],
									"name": "withdrawNFT",
									"nameLocation": "889:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "909:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "901:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "925:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "917:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:30:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:0:1"
									},
									"scope": 191,
									"src": "880:352:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1296:36:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "Controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1307:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 186,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "1320:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1307:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1307:17:1"
											}
										]
									},
									"functionSelector": "92eefe9b",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "onlyOwner",
												"nameLocations": [
													"1286:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 239,
												"src": "1286:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1286:9:1"
										}
									],
									"name": "setController",
									"nameLocation": "1249:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1271:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1263:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:14:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:1"
									},
									"scope": 191,
									"src": "1240:92:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "222:1113:1",
							"usedErrors": [],
							"usedEvents": [
								35,
								207,
								213
							]
						}
					],
					"src": "33:1304:1"
				},
				"id": 1
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"IOwnable": [
							199
						],
						"Ownable": [
							304
						]
					},
					"id": 305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 199,
							"linearizedBaseContracts": [
								199
							],
							"name": "IOwnable",
							"nameLocation": "71:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "96:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "122:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "114:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "113:18:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:2"
									},
									"scope": 199,
									"src": "87:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "61:83:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 200,
										"name": "IOwnable",
										"nameLocations": [
											"168:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 199,
										"src": "168:8:2"
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "168:8:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304,
								199
							],
							"name": "Ownable",
							"nameLocation": "157:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "201:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "184:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 202,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "184:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "f8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820",
									"id": 207,
									"name": "OwnershipRenounced",
									"nameLocation": "222:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "257:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "241:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:31:2"
									},
									"src": "216:56:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 213,
									"name": "OwnershipTransferred",
									"nameLocation": "286:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "333:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "317:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "373:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "357:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:82:2"
									},
									"src": "280:109:2"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "411:38:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 216,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "422:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 217,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "431:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "435:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "431:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "422:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "422:19:2"
											}
										]
									},
									"id": 222,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:0:2"
									},
									"scope": 304,
									"src": "397:52:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "504:32:2",
										"statements": [
											{
												"expression": {
													"id": 227,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "522:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 226,
												"id": 228,
												"nodeType": "Return",
												"src": "515:13:2"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "466:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "495:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:2"
									},
									"scope": 304,
									"src": "457:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "565:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 233,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "584:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "584:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "576:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "576:18:2"
											},
											{
												"id": 237,
												"nodeType": "PlaceholderStatement",
												"src": "605:1:2"
											}
										]
									},
									"id": 239,
									"name": "onlyOwner",
									"nameLocation": "553:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:2:2"
									},
									"src": "544:70:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "668:46:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 244,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "686:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "690:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "686:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 246,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "700:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "686:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 243,
												"id": 248,
												"nodeType": "Return",
												"src": "679:27:2"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "631:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:6:2"
									},
									"scope": 304,
									"src": "622:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "768:80:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 256,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "803:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 255,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "784:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "784:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "EmitStatement",
												"src": "779:31:2"
											},
											{
												"expression": {
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 259,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "821:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "838:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "830:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 260,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "830:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "830:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "821:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "821:19:2"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 252,
												"name": "onlyOwner",
												"nameLocations": [
													"758:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 239,
												"src": "758:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "758:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "731:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "748:2:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:0:2"
									},
									"scope": 304,
									"src": "722:126:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										198
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "918:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 275,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "948:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 274,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "929:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "929:28:2"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 271,
												"name": "onlyOwner",
												"nameLocations": [
													"908:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 239,
												"src": "908:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "908:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "865:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "883:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:18:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:2"
									},
									"scope": 304,
									"src": "856:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1028:132:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 285,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "1047:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1067:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1059:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1059:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1059:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1047:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1039:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1039:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1039:31:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 294,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "1107:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1115:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 293,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1086:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "EmitStatement",
												"src": "1081:43:2"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1135:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "1144:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1135:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1135:17:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "982:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1009:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "1001:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:18:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:0:2"
									},
									"scope": 304,
									"src": "973:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 305,
							"src": "148:1015:2",
							"usedErrors": [],
							"usedEvents": [
								207,
								213
							]
						}
					],
					"src": "33:1132:2"
				},
				"id": 2
			},
			"contracts/interfaces/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							372
						]
					},
					"id": 373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "157:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 372,
							"linearizedBaseContracts": [
								372
							],
							"name": "ERC20",
							"nameLocation": "195:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "217:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:2:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "247:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "247:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:15:3"
									},
									"scope": 372,
									"src": "208:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "279:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "311:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:15:3"
									},
									"scope": 372,
									"src": "270:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "343:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:2:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "377:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 318,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "377:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:7:3"
									},
									"scope": 372,
									"src": "334:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "401:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:3"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "438:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:9:3"
									},
									"scope": 372,
									"src": "392:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "464:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "482:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "474:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:16:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "521:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "513:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:17:3"
									},
									"scope": 372,
									"src": "455:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "547:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "574:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "566:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "596:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "588:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:54:3"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "633:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "628:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "628:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:14:3"
									},
									"scope": 372,
									"src": "538:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "659:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "714:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "706:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "736:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "728:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:78:3"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "773:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "768:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "768:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:14:3"
									},
									"scope": 372,
									"src": "650:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "799:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "825:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "817:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "852:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "844:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:59:3"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "889:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "884:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:14:3"
									},
									"scope": 372,
									"src": "790:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "915:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "943:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "935:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "968:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "960:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:59:3"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "remaining",
												"nameLocation": "1015:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1007:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:19:3"
									},
									"scope": 372,
									"src": "906:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 373,
							"src": "185:844:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "157:874:3"
				},
				"id": 3
			},
			"contracts/interfaces/ERC721.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ERC721.sol",
					"exportedSymbols": {
						"ERC721": [
							424
						],
						"ERC721Enumerable": [
							452
						]
					},
					"id": 453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 375,
								"nodeType": "StructuredDocumentation",
								"src": "160:170:4",
								"text": "@title ERC-721 Non-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x80ac58cd."
							},
							"fullyImplemented": false,
							"id": 424,
							"linearizedBaseContracts": [
								424
							],
							"name": "ERC721",
							"nameLocation": "340:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "354:323:4",
										"text": "@notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
									},
									"functionSelector": "70a08231",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "692:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "710:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "702:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:16:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "741:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:9:4"
									},
									"scope": 424,
									"src": "683:67:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "758:251:4",
										"text": "@notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
									},
									"functionSelector": "6352211e",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1024:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1040:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1032:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:18:4"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1073:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:9:4"
									},
									"scope": 424,
									"src": "1015:67:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "1090:851:4",
										"text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
									},
									"functionSelector": "b88d4fde",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1956:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1991:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1983:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2015:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2007:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2037:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2029:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2056:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2056:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1972:108:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:0:4"
									},
									"scope": 424,
									"src": "1947:151:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2106:353:4",
										"text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n  except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "42842e0e",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2474:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2533:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2525:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2555:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2547:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:80:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2587:0:4"
									},
									"scope": 424,
									"src": "2465:123:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2596:584:4",
										"text": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "23b872dd",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3195:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3226:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3218:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3250:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3242:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3272:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3264:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3264:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:80:4"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:0:4"
									},
									"scope": 424,
									"src": "3186:119:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 453,
							"src": "330:2978:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 426,
										"name": "ERC721",
										"nameLocations": [
											"3544:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "3544:6:4"
									},
									"id": 427,
									"nodeType": "InheritanceSpecifier",
									"src": "3544:6:4"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 425,
								"nodeType": "StructuredDocumentation",
								"src": "3312:202:4",
								"text": "@title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x780e9d63."
							},
							"fullyImplemented": false,
							"id": 452,
							"linearizedBaseContracts": [
								452,
								424
							],
							"name": "ERC721Enumerable",
							"nameLocation": "3524:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "3558:211:4",
										"text": "@notice Count NFTs tracked by this contract\n @return A count of valid NFTs tracked by this contract, where each one of\n  them has an assigned and queryable owner not equal to the zero address"
									},
									"functionSelector": "18160ddd",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3795:2:4"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:9:4"
									},
									"scope": 452,
									"src": "3775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "3838:243:4",
										"text": "@notice Enumerate valid NFTs\n @dev Throws if `_index` >= `totalSupply()`.\n @param _index A counter less than `totalSupply()`\n @return The token identifier for the `_index`th NFT,\n  (sort order not specified)"
									},
									"functionSelector": "4f6ccce7",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "4096:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "4117:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4109:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:16:4"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4148:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4147:9:4"
									},
									"scope": 452,
									"src": "4087:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "4165:440:4",
										"text": "@notice Enumerate NFTs assigned to an owner\n @dev Throws if `_index` >= `balanceOf(_owner)` or if\n  `_owner` is the zero address, representing invalid NFTs.\n @param _owner An address where we are interested in NFTs owned by them\n @param _index A counter less than `balanceOf(_owner)`\n @return The token identifier for the `_index`th NFT assigned to `_owner`,\n   (sort order not specified)"
									},
									"functionSelector": "2f745c59",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "4620:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4658:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "4650:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4650:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "4683:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "4675:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4675:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:57:4"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "4720:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4719:9:4"
									},
									"scope": 452,
									"src": "4611:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 453,
							"src": "3514:1218:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "132:4602:4"
				},
				"id": 4
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							763
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 454,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "SafeMath",
							"nameLocation": "69:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "327:146:5",
										"statements": [
											{
												"id": 484,
												"nodeType": "UncheckedBlock",
												"src": "338:128:5",
												"statements": [
													{
														"assignments": [
															467
														],
														"declarations": [
															{
																"constant": false,
																"id": 467,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "371:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 484,
																"src": "363:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 466,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "363:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 471,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "375:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 469,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "379:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "375:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "363:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "399:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 473,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "403:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "399:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 479,
														"nodeType": "IfStatement",
														"src": "395:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "414:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "421:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 477,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "413:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 465,
															"id": 478,
															"nodeType": "Return",
															"src": "406:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "446:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 481,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "452:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 482,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "445:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 465,
														"id": 483,
														"nodeType": "Return",
														"src": "438:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "85:135:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "235:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "260:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "252:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "280:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "272:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "241:47:5"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "312:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "312:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "318:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:5"
									},
									"scope": 763,
									"src": "226:247:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "727:118:5",
										"statements": [
											{
												"id": 512,
												"nodeType": "UncheckedBlock",
												"src": "738:100:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 499,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "771:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "767:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "763:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "782:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "789:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 503,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "781:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 497,
															"id": 504,
															"nodeType": "Return",
															"src": "774:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "814:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 507,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "820:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 508,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "824:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "820:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 510,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "813:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 497,
														"id": 511,
														"nodeType": "Return",
														"src": "806:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "481:139:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "635:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "660:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "652:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "680:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "672:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:47:5"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "712:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "712:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "718:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:15:5"
									},
									"scope": 763,
									"src": "626:219:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "1101:427:5",
										"statements": [
											{
												"id": 554,
												"nodeType": "UncheckedBlock",
												"src": "1112:409:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "1374:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1379:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1374:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 533,
														"nodeType": "IfStatement",
														"src": "1370:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1390:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1396:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1389:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 525,
															"id": 532,
															"nodeType": "Return",
															"src": "1382:16:5"
														}
													},
													{
														"assignments": [
															535
														],
														"declarations": [
															{
																"constant": false,
																"id": 535,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1421:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 554,
																"src": "1413:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 534,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1413:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 539,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 536,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "1425:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 537,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "1429:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1425:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1413:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 540,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "1449:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 541,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "1453:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1449:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "1458:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1449:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 549,
														"nodeType": "IfStatement",
														"src": "1445:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1469:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1476:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 547,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1468:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 525,
															"id": 548,
															"nodeType": "Return",
															"src": "1461:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1501:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 551,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "1507:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 552,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1500:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 525,
														"id": 553,
														"nodeType": "Return",
														"src": "1493:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "853:141:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1009:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1034:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1026:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1054:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1046:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:47:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1086:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1086:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1092:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:15:5"
									},
									"scope": 763,
									"src": "1000:528:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "1785:119:5",
										"statements": [
											{
												"id": 582,
												"nodeType": "UncheckedBlock",
												"src": "1796:101:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "1825:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1825:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 575,
														"nodeType": "IfStatement",
														"src": "1821:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1841:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1848:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1840:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 567,
															"id": 574,
															"nodeType": "Return",
															"src": "1833:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1873:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 577,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "1879:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 578,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "1883:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1879:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 580,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1872:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 567,
														"id": 581,
														"nodeType": "Return",
														"src": "1865:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1536:142:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1693:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1718:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1710:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1738:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1730:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1699:47:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1776:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:15:5"
									},
									"scope": 763,
									"src": "1684:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "2171:119:5",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "2182:101:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "2211:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2216:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2211:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "2207:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2227:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2234:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2226:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 595,
															"id": 602,
															"nodeType": "Return",
															"src": "2219:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2259:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 605,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "2265:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 606,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "2269:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2265:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 608,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2258:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 595,
														"id": 609,
														"nodeType": "Return",
														"src": "2251:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "1912:152:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2079:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2104:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2096:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2124:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2116:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:47:5"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2156:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2156:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2162:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:15:5"
									},
									"scope": 763,
									"src": "2070:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "2604:31:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 622,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "2622:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 623,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2626:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2622:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 621,
												"id": 625,
												"nodeType": "Return",
												"src": "2615:12:5"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2298:233:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2546:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2558:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2550:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2569:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2561:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:22:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2595:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2595:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2594:9:5"
									},
									"scope": 763,
									"src": "2537:98:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "2985:31:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 637,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "3003:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 638,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3007:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3003:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 636,
												"id": 640,
												"nodeType": "Return",
												"src": "2996:12:5"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "2643:269:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2927:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2939:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2931:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2950:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2942:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:22:5"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2976:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:9:5"
									},
									"scope": 763,
									"src": "2918:98:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3342:31:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 652,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3360:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 653,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3364:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3360:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 651,
												"id": 655,
												"nodeType": "Return",
												"src": "3353:12:5"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "3024:245:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3284:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3296:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3288:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3307:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3299:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3287:22:5"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3333:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:9:5"
									},
									"scope": 763,
									"src": "3275:98:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "3741:31:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 667,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3759:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 668,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "3763:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3759:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 666,
												"id": 670,
												"nodeType": "Return",
												"src": "3752:12:5"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3381:287:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3695:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "3687:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3706:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "3698:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3698:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3686:22:5"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "3732:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:9:5"
									},
									"scope": 763,
									"src": "3674:98:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "4306:31:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "4324:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 683,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "4328:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4324:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 681,
												"id": 685,
												"nodeType": "Return",
												"src": "4317:12:5"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "3780:453:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4248:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4260:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "4252:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4271:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "4263:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:22:5"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "4297:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4296:9:5"
									},
									"scope": 763,
									"src": "4239:98:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "4945:111:5",
										"statements": [
											{
												"id": 710,
												"nodeType": "UncheckedBlock",
												"src": "4956:93:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 700,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "4989:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 701,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "4994:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4989:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 703,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "4997:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 699,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4981:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4981:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 705,
														"nodeType": "ExpressionStatement",
														"src": "4981:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 706,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "5032:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 707,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "5036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5032:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 698,
														"id": 709,
														"nodeType": "Return",
														"src": "5025:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "4345:465:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4825:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4847:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4839:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4867:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4859:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4893:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4879:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4879:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4828:84:5"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4936:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4936:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:9:5"
									},
									"scope": 763,
									"src": "4816:240:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "5683:110:5",
										"statements": [
											{
												"id": 735,
												"nodeType": "UncheckedBlock",
												"src": "5694:92:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 725,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "5727:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5731:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5727:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 728,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "5734:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 724,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5719:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5719:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 730,
														"nodeType": "ExpressionStatement",
														"src": "5719:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "5769:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 732,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "5773:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5769:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 723,
														"id": 734,
														"nodeType": "Return",
														"src": "5762:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "5064:484:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5563:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5585:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5577:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5605:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5597:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5631:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5617:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5617:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5566:84:5"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5674:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:9:5"
									},
									"scope": 763,
									"src": "5554:239:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "6585:110:5",
										"statements": [
											{
												"id": 760,
												"nodeType": "UncheckedBlock",
												"src": "6596:92:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 750,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "6629:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6633:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6629:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 753,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "6636:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 749,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6621:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6621:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "6621:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "6671:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 757,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "6675:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6671:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 748,
														"id": 759,
														"nodeType": "Return",
														"src": "6664:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "5801:649:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6465:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6487:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "6479:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6479:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6507:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "6499:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6533:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "6519:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6519:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:84:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "6576:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:5"
									},
									"scope": 763,
									"src": "6456:239:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 764,
							"src": "61:6637:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:6667:5"
				},
				"id": 5
			}
		}
	}
}